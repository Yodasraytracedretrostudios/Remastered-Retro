{\rtf1\ansi\deff0\nouicompat{\fonttbl{\f0\fnil\fcharset0 Calibri;}}
{\colortbl ;\red0\green0\blue255;}
{\*\generator Riched20 10.0.19041}\viewkind4\uc1 
\pard\sa200\sl276\slmult1\f0\fs22\lang9 This game in the worst case scenario around the city is very CPU heavy especially with raytracing injection. If you have a slower CPU you may consider locking the FPS to 30 like the console version so you dont get jarring 1% lows. It appears to be caused by the audio thread similar to Final Fantasy XV. Hypothetically if special k was reworked to actually function properly with reshade and modern effects it might be able to fix this problem. You are going to want a CPU with a lot of cache memory. The glow effect on geometry is very close range which I ordinarily do not tolerate support of in my library but this game even without that effects full scene coverage looks remarkably superior despite.\par
\par
To not get stuttering in the city you are going to need Zen 3+, Alderlake or better.\par
\par
Minimum GPU requirements: GTX 980\par
\par
Minimum system requirements with high preset: GTX 1660 Ti @ 1080\par
\par
Mod requirements:\par
Toggle reshade off in 2D cinematics or it will break the render, toggle reshade on for 3D render. You can tell when reshade is off and as a result the image still has very noticeable antialiasing and is compressed blur trash. The developers needs to patch the game with all the 3D prerenders as native floating point texture data. Or as a beta option for their distributing clients. Imagine how effortless that would be if it was sitting in some room as an unused asset. It would fix my mod very easily too, and raise the value of the game. Though personally I would remove the MLAA and dumb sharpener. The MLAA is mediocre, predication SMAA is superior even if its not as aggressive. Its a more pure true image. And the dumb sharpener just destroyed the textures. It looked horrible. I fixed all of it. Also a real deal sweetener would be easy texture access. An upscale of the vanilla assets would be an asset. A minor one, but definitely an upgrade. In fact making the game more accessible period, so fans can more easily fix and polish the game would be a really nice guy thing to do. I was personally excruciatingly disappointed at the actual launch of this game. The light scattering parallax tessellation yada yada, yeah its good. The retail render though? It hugged the edge of really good, it was like someone was taking a piss on famous ancient respected art. That disturbance in the force left scars. \par
\par
Mod installation steps:\par
This game is sensitive to the PC being left on for long periods in that it can cause problems with the depth buffer access. You may need to restart your PC. If it has been on for 6 hours or longer it would be a good idea. DX12 mode tends to crash when playing with the settings. I can only vouch for this working correctly under DX11. DX11 mode if you leave the game steam may be required to be reset for the game to launch again BUT YOU WILL WANT TO RESTART YOUR PC INSTEAD BECAUSE THIS CAN LEAD TO MASSIVE STUTTERING. DX12 does not have this problem as blatantly but it appears to have it in a far more forgivable manor. IF YOU LEAVE THE GAME IN ANY FASHION YOU SHOULD RESTART THE PC BEFORE TRYING TO RUN IT AGAIN AS A PRECAUTION. \par
\par
Left click the windows start menu, and select "Settings". "Gaming, Game Mode, "Graphics settings", "Hardware-accelerated GPU scheduling".\par
\par
Turn off in the game options MLAA. Turn off MSAA. Turn off the in game sharpener. Turn off depth of field. Turn off motion blur. Change double buffered vsync to triple. TURN ON EXCLUSIVE FULLSCREEN or the depth buffer will have to be set manually each game level start, along with it dropping all the time.\par
\par
Install reshade ({{\field{\*\fldinst{HYPERLINK https://reshade.me/ }}{\fldrslt{https://reshade.me/\ul0\cf0}}}}\f0\fs22 ) to the game executable. \par
\par
{{\field{\*\fldinst{HYPERLINK https://github.com/Yodasraytracedretr }}{\fldrslt{https://github.com/Yodasraytracedretr\ul0\cf0}}}}\f0\fs22 ...\par
Download the following files: "reshade-shaders" then replace the base "reshade-shaders" folder generated by the typical reshade install with mine provided. Then drop the "ReShadePreset.ini" into the "Deus Ex Mankind Divided" folder next to the game executable.\line\line This game uses 4 threads under DX11 mode. You will likely want to use DX12 mode instead if it is stable which can use every thread you have even on a 5950X. However the 1% lows is caused by whatever thread is handling a dependency of other threads not being able to complete work fast enough. In other words its not a total CPU processing power issue, but a latency issue. In my case my second CCX if being used actually performs worse. It is a trade off as DX12 mode is probably going to be slower for the GPU performance since its not properly implemented. Its basically just a wrapper in practice because even being built from the ground up it probably is still using hardware abstraction, or a worse stand in for it. Games like this give DX12 a bad name, but it has a niche use if you have the GPU processing power to shrug off the loss in that silicone bottleneck. The CPU in my experience even with one of the fastest CPUs in the world at this time is still very much the bottleneck so its probably wise to choose DX12 over DX11. \par
\par
{{\field{\*\fldinst{HYPERLINK https://bitsum.com/ }}{\fldrslt{https://bitsum.com/\ul0\cf0}}}}\f0\fs22\par
\par
NOT RECOMENDED:\par
DX11 (CPU slower GPU faster):\par
You can use task manager as well but it has less flexibility. If you have a 6 thread CPU or better you can get better performance with this trick., Basically this avoids L3 cache dumping (context switching) penalties typical of windows default thread scheduling behavior. This is the real reason turning hyperthreading off for some games can make them faster. You dont have to do that, just put the game exclusively on cores 0, 2, 4, and 6 for CPUs with hyperthreading, and for CPUs that do not have hyperthreading, you want cores 0, 1, 2, 3. Right click the game in process lasso or task manager and select CPU affinity. TURN OFF LOGGING.\par
\par
RECOMENDED: \par
DX12 (CPU faster GPU typically slower/GCN and up radeons potentially being the exception):\par
In my case im only putting the game on the first CCX or 16 threads since my second CCX is slower and would only add latency. Using the logical cores is faster over using just 8 cores only. If all your cores are the same speed you should go ahead and put the game logic on the entire CPU if you have multiple CCX. In a proper DX12 implementation it would generally be ideal to just use every core you have available even if some are slower. This game is NOT using DX12 properly, but its still better than DX11 in its own specific way. \par
\par
{{\field{\*\fldinst{HYPERLINK https://www.filehorse.com/download-timer-resolution/download/#google_vignette }}{\fldrslt{https://www.filehorse.com/download-timer-resolution/download/#google_vignette\ul0\cf0}}}}\f0\fs22\par
Must be open and set to maximum. Open command prompt as admin and copy paste: bcdedit /set useplatformclock false (Requires reboot)\par
\par
Ideally this is an even .500 number.\par
\par
Start bar, Search: Windows Security, App and browser control, Exploit protection settings. Select Program settings tab. + Add program to customize. Find Deus Ex Mankind Divided. Override and turn off everything.\par
\par
Only if you have an AMD processor you will need to do the following:\par
The game when using intels compilation path appears to have very slightly less stutter which might be because of a bug, or possibly another reason.\par
\par
This spoofs your CPUID, telling the game its an intel, when its not:\par
/www.agner.org/optimize/intel_dispatch_patch.zip\par
\par
You will only need to use "intel_mkl_cpuid_patch.c".\par
\par
{{\field{\*\fldinst{HYPERLINK https://visualstudio.microsoft.com/thank-you-downloading-visual-studio/?sku=Community&rel=16# }}{\fldrslt{https://visualstudio.microsoft.com/thank-you-downloading-visual-studio/?sku=Community&rel=16#\ul0\cf0}}}}\f0\fs22\par
\par
Download just the default options. This is the program programmers use, and it will allow you to patch the games performance problem. The compiler will be able to use SSE3 instructions instead of slower emulation.\par
\par
Now open visual studios, run the game, and find the attach function. Select the game and once its attached the debug console will come up which means the patch worked and you dont need visual studios anymore so close it out. Restart the game. Thats it. Youre done.\par
\par
If you get a prompt saying you must be admin, simply agree, open a new project with C++ in the name, go to the folder icon, open intel_mkl_cpuid_patch.c, go to the debug tab, attach to process, find the game in the menu. Once the debug graph comes up, its done.\par
\par
WARNING under DX12 if you exceed the graphics card memory buffer the game can crash, lock up, or even black screen your PC if enough variables line up like windows also having been on too long without a reboot. You will NEED at minimum of 8-10GBs of memory to really take advantage of FSR. MY GTX 1660 Ti's 6GBs is NOT enough to do both raytracing almost all maxed game settings and a proper upscale.\par
\par
If you want to use FSR use the app Lossless Scaling from the Steam Store (Not free). Set your desktop to 4k even if you have a 1080 screen. I wouldnt use a lower starting rez unless your PC is complete trash. You will also need to use the reshade-shaders file provided in the github location inside the folder named FSR reconstructor stabilizer.\par
\par
Run the game in windowed mode. So the size of the window reported doesnt matter, its the last resolution the menu was set at from fullscreen that it actually upscales from. I know from making the windows super small to upscale from its reported really low rez, and it was definitely upscaling from the 1080 image.\par
\par
AMD FSR 0\par
\par
Optional:\par
Scale Factor Custom 1.5 = 2k\par
Scale Factor Custom 1 = 4k\par
\par
Use the cntl + alt + s toggle.\par
}
 