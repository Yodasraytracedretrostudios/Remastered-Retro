//Water reflection.
// ---- Created with 3Dmigoto v1.3.11 on Fri Aug 03 17:12:25 2018
cbuffer cb9 : register(b9)
{
  float4 cb9[7];
}

cbuffer cb12 : register(b12)
{
  float4 cb12[12];
}

cbuffer cb10 : register(b10)
{
  float4 cb10[3];
}




// 3Dmigoto declarations
#define cmp -
Texture1D<float4> IniParams : register(t120);
Texture2D<float4> StereoParams : register(t125);


void main(
  float4 v0 : POSITION0,
  float4 v1 : NORMAL0,
  float4 v2 : COLOR0,
  float2 v3 : TEXCOORD0,
  out float4 o0 : TEXCOORD0,
  out float4 o1 : TEXCOORD1,
  out float4 o2 : TEXCOORD2,
  out float4 o3 : TEXCOORD3,
  out float4 o4 : TEXCOORD4,
  out float3 o5 : TEXCOORD5,
  out float4 o6 : SV_POSITION0)
{
  float4 r0,r1,r2,r10,r11,r12;
  uint4 bitmask, uiDest;
  float4 fDest;

  float4 stereo = StereoParams.Load(0);
  float4 iniparams = IniParams.Load(0);
  
  r0.y = dot(cb10[1].xyzw, v0.xyzw);
  r0.w = v0.w;
  r0.x = dot(cb10[0].xyzw, v0.xyzw);
  r0.z = dot(cb10[2].xyzw, v0.xyzw);
  
  r10.xyzw=r0.xyzw;
  
  //r10.x+=stereo.x*(dot(cb12[7].xyzw, r10.xyzw)*stereo.y-1)*iniparams.x;
  
  r11.x = dot(cb12[4].xyzw, r10.xyzw);
  r11.y = dot(cb12[5].xyzw, r10.xyzw);
  r11.z = dot(cb12[6].xyzw, r10.xyzw);
  
  r1.x = dot(cb12[4].xyzw, r0.xyzw);
  r1.y = dot(cb12[5].xyzw, r0.xyzw);
  r1.z = dot(cb12[6].xyzw, r0.xyzw);
  
  o0.xyz = r11.xyz;
  //r1.x+=stereo.x*(r1.z-stereo.y);
  o1.w = v2.w;
  r2.xyz = float3(-0.5,-0.5,-0.5) + v1.xyz;
  
  o1.x = dot(cb12[4].xyz, r2.xyz);
  o1.y = dot(cb12[5].xyz, r2.xyz);
  o1.z = dot(cb12[6].xyz, r2.xyz);
  //o1.x+=stereo.x*0.5;
  o2.x = dot(cb9[0].xyz, r1.xyz);
  o2.y = dot(cb9[1].xyz, r1.xyz);
  o2.z = dot(cb9[2].xyz, r1.xyz);
  o2.w = dot(cb9[3].xyz, r1.xyz);
  o3.xy = cb9[4].xy * r0.xz;
  o3.zw = cb9[5].xy * r0.xz;
  o4.xy = v3.xy;
  r1.x = cb9[6].z * r2.y;
  r1.xy = r2.xz * -r1.xx;
  r1.z = dot(r1.xy, r1.xy);
  o5.xy = r1.xy;
  o5.z = sqrt(r1.z);
  o6.x = dot(cb12[8].xyzw, r0.xyzw);
  o6.y = dot(cb12[9].xyzw, r0.xyzw);
  o6.z = dot(cb12[10].xyzw, r0.xyzw);
  o6.w = dot(cb12[11].xyzw, r0.xyzw);
  
  return;
}

/*~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//   using 3Dmigoto v1.3.11 on Fri Aug 03 17:12:25 2018
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyzw
// NORMAL                   0   xyzw        1     NONE   float   xyz
// COLOR                    0   xyzw        2     NONE   float      w
// TEXCOORD                 0   xy          3     NONE   float   xy
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// TEXCOORD                 0   xyz         0     NONE   float   xyz
// TEXCOORD                 1   xyzw        1     NONE   float   xyzw
// TEXCOORD                 2   xyzw        2     NONE   float   xyzw
// TEXCOORD                 3   xyzw        3     NONE   float   xyzw
// TEXCOORD                 4   xy          4     NONE   float   xy
// TEXCOORD                 5   xyz         5     NONE   float   xyz
// SV_POSITION              0   xyzw        6      POS   float   xyzw
//
vs_5_0
dcl_globalFlags refactoringAllowed
dcl_constantbuffer cb10[3], immediateIndexed
dcl_constantbuffer cb12[12], immediateIndexed
dcl_constantbuffer cb9[7], immediateIndexed
dcl_input v0.xyzw
dcl_input v1.xyz
dcl_input v2.w
dcl_input v3.xy
dcl_output o0.xyz
dcl_output o1.xyzw
dcl_output o2.xyzw
dcl_output o3.xyzw
dcl_output o4.xy
dcl_output o5.xyz
dcl_output_siv o6.xyzw, position
dcl_temps 3
dp4 r0.y, cb10[1].xyzw, v0.xyzw
mov r0.w, v0.w
dp4 r0.x, cb10[0].xyzw, v0.xyzw
dp4 r0.z, cb10[2].xyzw, v0.xyzw
dp4 r1.x, cb12[4].xyzw, r0.xyzw
dp4 r1.y, cb12[5].xyzw, r0.xyzw
dp4 r1.z, cb12[6].xyzw, r0.xyzw
mov o0.xyz, r1.xyzx
mov o1.w, v2.w
add r2.xyz, v1.xyzx, l(-0.500000, -0.500000, -0.500000, 0.000000)
dp3 o1.x, cb12[4].xyzx, r2.xyzx
dp3 o1.y, cb12[5].xyzx, r2.xyzx
dp3 o1.z, cb12[6].xyzx, r2.xyzx
dp3 o2.x, cb9[0].xyzx, r1.xyzx
dp3 o2.y, cb9[1].xyzx, r1.xyzx
dp3 o2.z, cb9[2].xyzx, r1.xyzx
dp3 o2.w, cb9[3].xyzx, r1.xyzx
mul o3.xy, r0.xzxx, cb9[4].xyxx
mul o3.zw, r0.xxxz, cb9[5].xxxy
mov o4.xy, v3.xyxx
mul r1.x, r2.y, cb9[6].z
mul r1.xy, -r1.xxxx, r2.xzxx
dp2 r1.z, r1.xyxx, r1.xyxx
mov o5.xy, r1.xyxx
sqrt o5.z, r1.z
dp4 o6.x, cb12[8].xyzw, r0.xyzw
dp4 o6.y, cb12[9].xyzw, r0.xyzw
dp4 o6.z, cb12[10].xyzw, r0.xyzw
dp4 o6.w, cb12[11].xyzw, r0.xyzw
ret
// Approximately 0 instruction slots used

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~*/
