//Shadows VS.
// ---- Created with 3Dmigoto v1.3.11 on Fri Aug 03 18:25:05 2018
cbuffer cb9 : register(b9)
{
  float4 cb9[1];
}

cbuffer cb12 : register(b12)
{
  float4 cb12[29];
}




// 3Dmigoto declarations
#define cmp -
Texture1D<float4> IniParams : register(t120);
Texture2D<float4> StereoParams : register(t125);


void main(
  float4 v0 : POSITION0,
  float2 v1 : TEXCOORD0,
  out float4 o0 : TEXCOORD0,
  out float3 o1 : TEXCOORD1,
  out float4 o2 : SV_POSITION0)
{
  float4 r0;
  uint4 bitmask, uiDest;
  float4 fDest;

  float4 stereo = StereoParams.Load(0);
  
  o0.xy = v1.xy;
  r0.z = 1;
  r0.xy = v0.xy * cb12[28].xy + cb12[28].zw;
  o1.xyz = cb9[0].xyz * r0.xyz;
  o2.xy = r0.xy;
  o2.zw = v0.zw;
  //o2.x-=stereo.x*(o2.w-stereo.y);
  return;
}

/*~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//   using 3Dmigoto v1.3.11 on Fri Aug 03 18:25:05 2018
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyzw
// TEXCOORD                 0   xy          1     NONE   float   xy
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// TEXCOORD                 0   xy          0     NONE   float   xy
// TEXCOORD                 1   xyz         1     NONE   float   xyz
// SV_POSITION              0   xyzw        2      POS   float   xyzw
//
vs_5_0
dcl_globalFlags refactoringAllowed
dcl_constantbuffer cb12[29], immediateIndexed
dcl_constantbuffer cb9[1], immediateIndexed
dcl_input v0.xyzw
dcl_input v1.xy
dcl_output o0.xy
dcl_output o1.xyz
dcl_output_siv o2.xyzw, position
dcl_temps 1
mov o0.xy, v1.xyxx
mov r0.z, l(1.000000)
mad r0.xy, v0.xyxx, cb12[28].xyxx, cb12[28].zwzz
mul o1.xyz, r0.xyzx, cb9[0].xyzx
mov o2.xy, r0.xyxx
mov o2.zw, v0.zzzw
ret
// Approximately 0 instruction slots used

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~*/
