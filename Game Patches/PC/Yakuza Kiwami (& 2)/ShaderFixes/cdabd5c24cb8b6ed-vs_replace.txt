//Sea water VS.
// ---- Created with 3Dmigoto v1.3.11 on Sun Aug 05 16:21:23 2018
Texture2D<float4> t0 : register(t0);

SamplerState s0_s : register(s0);

cbuffer cb3 : register(b3)
{
  float4 cb3[7];
}

cbuffer cb1 : register(b1)
{
  float4 cb1[8];
}

cbuffer cb9 : register(b9)
{
  float4 cb9[6];
}

cbuffer cb13 : register(b13)
{
  float4 cb13[1];
}

cbuffer cb12 : register(b12)
{
  float4 cb12[31];
}




// 3Dmigoto declarations
#define cmp -
Texture1D<float4> IniParams : register(t120);
Texture2D<float4> StereoParams : register(t125);


void main(
  float4 v0 : POSITION0,
  out float4 o0 : TEXCOORD0,
  out float4 o1 : TEXCOORD1,
  out float4 o2 : TEXCOORD2,
  out float4 o3 : TEXCOORD3,
  out float4 o4 : TEXCOORD4,
  out float3 o5 : TEXCOORD5,
  out float4 o6 : SV_POSITION0)
{
  float4 r0,r1,r2;
  uint4 bitmask, uiDest;
  float4 fDest;

  float4 stereo = StereoParams.Load(0);
  
  
  o0.xy = v0.xy * float2(-0.5,0.5) + float2(0.5,0.5);
  r0.xy = -cb9[1].zw + v0.xy;
  r0.xy = cb9[1].xy * r0.xy;
  r0.z = -1;
  r0.w = dot(r0.xyz, cb9[0].xyz);
  r0.w = -cb9[0].w / r0.w;
  o0.x+=stereo.x*(0.5-stereo.y*0.0125);
  r1.xy = v0.xy * float2(-0.5,0.5) + float2(0.5,0.5);
  r1.x = t0.SampleLevel(s0_s, r1.xy, -1).x;
  r1.yzw = cb9[0].xyz * r1.xxx;
  o2.w = r1.x;
  r0.xyz = r0.xyz * r0.www + r1.yzw;
  r0.w = 1;
  
  //r0.x+=stereo.x*(r0.w+stereo.y)*0.5;
  
  r1.x = dot(cb9[2].xyzw, r0.xyzw);
  r1.z = dot(cb9[4].xyzw, r0.xyzw);
  r1.y = dot(cb9[3].xyzw, r0.xyzw);
  
  
  //r1.x+=stereo.x*cb13[0].x;
  o2.xyz = r0.xyz;
  o0.zw = float2(0.400000006,0.400000006) * r1.xz;
  r1.w = 1;
  r0.y = dot(cb12[9].xyzw, r1.xyzw);
  r2.y = -r0.y;
  r2.x = dot(cb12[8].xyzw, r1.xyzw);
  r0.z = dot(cb12[10].xyzw, r1.xyzw);
  r0.w = dot(cb12[11].xyzw, r1.xyzw);
  
  r2.yz = r2.xy + r0.zz;
  r2.y+=stereo.x*(r0.z-stereo.y)*1;
  o6.x = r2.x;
  o1.xy = float2(0.5,0.5) * r2.yz;
  o1.z = r0.z;
  o6.yzw = r0.yzw;
  r0.xyz = cb1[4].xyz * r0.www;
  r0.xyz = float3(1.44269502,1.44269502,1.44269502) * r0.xyz;
  r0.xyz = exp2(r0.xyz);
  r0.w = 0x00008000 & asint(cb13[0].x);
  o3.xyz = r0.www ? r0.xyz : float3(1,1,1);
  r0.xyz = cb1[7].www + -r0.xyz;
  r2.xyz = -cb12[30].xyz + r1.xyz;
  o5.xyz = -cb9[5].xyz + r1.xyz;
  r1.x = dot(r2.xyz, r2.xyz);
  r1.x = rsqrt(r1.x);
  r1.xyz = r2.xyz * r1.xxx;
  r1.x = dot(r1.xyz, -cb3[6].xyz);
  r1.y = cb1[6].w * r1.x + cb1[5].w;
  r1.x = r1.x * r1.x + cb1[7].w;
  r1.y = rsqrt(r1.y);
  r1.z = r1.y * r1.y;
  r2.xyz = cb1[6].xyz * r1.zzz;
  r1.yzw = r2.xyz * r1.yyy;
  r1.xyz = cb1[5].xyz * r1.xxx + r1.yzw;
  r1.xyz = cb1[7].xyz * r1.xyz;
  r0.xyz = r1.xyz * r0.xyz;
  o4.xyz = r0.www ? r0.xyz : float3(0,0,0);
  
  return;
}

/*~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//   using 3Dmigoto v1.3.11 on Sun Aug 05 16:21:23 2018
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xy
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// TEXCOORD                 0   xyzw        0     NONE   float   xyzw
// TEXCOORD                 1   xyz         1     NONE   float   xyz
// TEXCOORD                 2   xyzw        2     NONE   float   xyzw
// TEXCOORD                 3   xyz         3     NONE   float   xyz
// TEXCOORD                 4   xyz         4     NONE   float   xyz
// TEXCOORD                 5   xyz         5     NONE   float   xyz
// SV_POSITION              0   xyzw        6      POS   float   xyzw
//
vs_5_0
dcl_globalFlags refactoringAllowed
dcl_constantbuffer cb12[31], immediateIndexed
dcl_constantbuffer cb13[1], immediateIndexed
dcl_constantbuffer cb9[6], immediateIndexed
dcl_constantbuffer cb1[8], immediateIndexed
dcl_constantbuffer cb3[7], immediateIndexed
dcl_sampler s0, mode_default
dcl_resource_texture2d (float,float,float,float) t0
dcl_input v0.xy
dcl_output o0.xyzw
dcl_output o1.xyz
dcl_output o2.xyzw
dcl_output o3.xyz
dcl_output o4.xyz
dcl_output o5.xyz
dcl_output_siv o6.xyzw, position
dcl_temps 3
mad o0.xy, v0.xyxx, l(-0.500000, 0.500000, 0.000000, 0.000000), l(0.500000, 0.500000, 0.000000, 0.000000)
add r0.xy, v0.xyxx, -cb9[1].zwzz
mul r0.xy, r0.xyxx, cb9[1].xyxx
mov r0.z, l(-1.000000)
dp3 r0.w, r0.xyzx, cb9[0].xyzx
div r0.w, -cb9[0].w, r0.w
mad r1.xy, v0.xyxx, l(-0.500000, 0.500000, 0.000000, 0.000000), l(0.500000, 0.500000, 0.000000, 0.000000)
sample_l_indexable(texture2d)(float,float,float,float) r1.x, r1.xyxx, t0.xyzw, s0, l(-1.000000)
mul r1.yzw, r1.xxxx, cb9[0].xxyz
mov o2.w, r1.x
mad r0.xyz, r0.xyzx, r0.wwww, r1.yzwy
mov r0.w, l(1.000000)
dp4 r1.x, cb9[2].xyzw, r0.xyzw
dp4 r1.z, cb9[4].xyzw, r0.xyzw
dp4 r1.y, cb9[3].xyzw, r0.xyzw
mov o2.xyz, r0.xyzx
mul o0.zw, r1.xxxz, l(0.000000, 0.000000, 0.400000, 0.400000)
mov r1.w, l(1.000000)
dp4 r0.y, cb12[9].xyzw, r1.xyzw
mov r2.y, -r0.y
dp4 r2.x, cb12[8].xyzw, r1.xyzw
dp4 r0.z, cb12[10].xyzw, r1.xyzw
dp4 r0.w, cb12[11].xyzw, r1.xyzw
add r2.yz, r0.zzzz, r2.xxyx
mov o6.x, r2.x
mul o1.xy, r2.yzyy, l(0.500000, 0.500000, 0.000000, 0.000000)
mov o1.z, r0.z
mov o6.yzw, r0.yyzw
mul r0.xyz, r0.wwww, cb1[4].xyzx
mul r0.xyz, r0.xyzx, l(1.442695, 1.442695, 1.442695, 0.000000)
exp r0.xyz, r0.xyzx
and r0.w, l(0x00008000), cb13[0].x
movc o3.xyz, r0.wwww, r0.xyzx, l(1.000000,1.000000,1.000000,0)
add r0.xyz, -r0.xyzx, cb1[7].wwww
add r2.xyz, r1.xyzx, -cb12[30].xyzx
add o5.xyz, r1.xyzx, -cb9[5].xyzx
dp3 r1.x, r2.xyzx, r2.xyzx
rsq r1.x, r1.x
mul r1.xyz, r1.xxxx, r2.xyzx
dp3 r1.x, r1.xyzx, -cb3[6].xyzx
mad r1.y, cb1[6].w, r1.x, cb1[5].w
mad r1.x, r1.x, r1.x, cb1[7].w
rsq r1.y, r1.y
mul r1.z, r1.y, r1.y
mul r2.xyz, r1.zzzz, cb1[6].xyzx
mul r1.yzw, r1.yyyy, r2.xxyz
mad r1.xyz, cb1[5].xyzx, r1.xxxx, r1.yzwy
mul r1.xyz, r1.xyzx, cb1[7].xyzx
mul r0.xyz, r0.xyzx, r1.xyzx
movc o4.xyz, r0.wwww, r0.xyzx, l(0,0,0,0)
ret
// Approximately 0 instruction slots used

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~*/
