//Tears or rain on face in flashback cutscene.
// ---- Created with 3Dmigoto v1.3.11 on Mon Aug 06 23:01:53 2018
Texture2D<float4> t1 : register(t1);

Texture2D<float4> t0 : register(t0);

SamplerState s1_s : register(s1);

SamplerState s0_s : register(s0);

cbuffer cb9 : register(b9)
{
  float4 cb9[1];
}




// 3Dmigoto declarations
#define cmp -
Texture1D<float4> IniParams : register(t120);
Texture2D<float4> StereoParams : register(t125);


void main(
  float4 v0 : COLOR0,
  float2 v1 : TEXCOORD0,
  out float4 o0 : SV_Target0)
{
  float4 r0,r1,r2,r3,r4;
  uint4 bitmask, uiDest;
  float4 fDest;

  float4 stereo = StereoParams.Load(0);
  
  //v1.x+=stereo.x*(0.5);
  
  r0.xyzw = t0.Sample(s0_s, v1.xy).xyzw;
  r1.x = cmp(r0.w >= cb9[0].x);
  r2.xy = -cb9[0].yy + v1.xy;
  r3.xy = cb9[0].yy + v1.xy;
  r2.zw = v1.yx;
  r1.y = t0.Sample(s0_s, r2.xz).w;
  r1.y = -r1.y + r0.w;
  r3.zw = v1.yx;
  r1.z = t0.Sample(s0_s, r3.xz).w;
  r1.z = r1.z + -r0.w;
  r4.x = r1.y + r1.z;
  r1.y = t0.Sample(s0_s, r2.wy).w;
  r1.y = r1.y + -r0.w;
  r1.z = t0.Sample(s0_s, r3.wy).w;
  r1.z = -r1.z + r0.w;
  r4.y = r1.y + r1.z;
  r4.z = cb9[0].z;
  r1.y = dot(r4.xyz, r4.xyz);
  r1.y = rsqrt(r1.y);
  //r4.x+=stereo.x*(r1.y-stereo.y)*0.5;
  r1.yz = r4.xy * r1.yy;
  r1.yz = r1.yz * cb9[0].ww + v1.xy;
  r1.yzw = t1.Sample(s1_s, r1.yz).xyz;
  if (r1.x != 0) {
    r0.xyzw = v0.xyzw * r0.xyzw;
    r0.xyz = r0.xyz * r1.yzw;
  } else {
    r0.xyzw = float4(0,0,0,0);
  }
  r1.x = -0.00392156886 + r0.w;
  r1.x = cmp(r1.x < 0);
  if (r1.x != 0) discard;
  o0.xyzw = r0.xyzw;
  return;
}

/*~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//   using 3Dmigoto v1.3.11 on Mon Aug 06 23:01:53 2018
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// COLOR                    0   xyzw        0     NONE   float   xyzw
// TEXCOORD                 0   xy          1     NONE   float   xy
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
ps_5_0
dcl_globalFlags refactoringAllowed
dcl_constantbuffer cb9[1], immediateIndexed
dcl_sampler s0, mode_default
dcl_sampler s1, mode_default
dcl_resource_texture2d (float,float,float,float) t0
dcl_resource_texture2d (float,float,float,float) t1
dcl_input_ps linear v0.xyzw
dcl_input_ps linear v1.xy
dcl_output o0.xyzw
dcl_temps 5
sample_indexable(texture2d)(float,float,float,float) r0.xyzw, v1.xyxx, t0.xyzw, s0
ge r1.x, r0.w, cb9[0].x
add r2.xy, v1.xyxx, -cb9[0].yyyy
add r3.xy, v1.xyxx, cb9[0].yyyy
mov r2.zw, v1.yyyx
sample_indexable(texture2d)(float,float,float,float) r1.y, r2.xzxx, t0.xwyz, s0
add r1.y, r0.w, -r1.y
mov r3.zw, v1.yyyx
sample_indexable(texture2d)(float,float,float,float) r1.z, r3.xzxx, t0.xywz, s0
add r1.z, -r0.w, r1.z
add r4.x, r1.z, r1.y
sample_indexable(texture2d)(float,float,float,float) r1.y, r2.wyww, t0.xwyz, s0
add r1.y, -r0.w, r1.y
sample_indexable(texture2d)(float,float,float,float) r1.z, r3.wyww, t0.xywz, s0
add r1.z, r0.w, -r1.z
add r4.y, r1.z, r1.y
mov r4.z, cb9[0].z
dp3 r1.y, r4.xyzx, r4.xyzx
rsq r1.y, r1.y
mul r1.yz, r1.yyyy, r4.xxyx
mad r1.yz, r1.yyzy, cb9[0].wwww, v1.xxyx
sample_indexable(texture2d)(float,float,float,float) r1.yzw, r1.yzyy, t1.wxyz, s1
if_nz r1.x
  mul r0.xyzw, r0.xyzw, v0.xyzw
  mul r0.xyz, r1.yzwy, r0.xyzx
else
  mov r0.xyzw, l(0,0,0,0)
endif
add r1.x, r0.w, l(-0.00392156886)
lt r1.x, r1.x, l(0.000000)
discard_nz r1.x
mov o0.xyzw, r0.xyzw
ret
// Approximately 0 instruction slots used

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~*/
