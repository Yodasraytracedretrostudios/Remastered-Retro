//Karaoke lights.
// ---- Created with 3Dmigoto v1.3.11 on Sat Aug 04 15:47:54 2018
TextureCube<float4> t3 : register(t3);

Texture2D<float4> t2 : register(t2);

Texture2D<float4> t1 : register(t1);

Texture2D<float4> t0 : register(t0);

SamplerState s3_s : register(s3);

SamplerState s2_s : register(s2);

SamplerState s1_s : register(s1);

SamplerState s0_s : register(s0);

cbuffer cb9 : register(b9)
{
  float4 cb9[16];
}

cbuffer cb12 : register(b12)
{
  float4 cb12[2];
}


// 3Dmigoto declarations
#define cmp -
Texture1D<float4> IniParams : register(t120);
Texture2D<float4> StereoParams : register(t125);


void main(
  float4 v0 : TEXCOORD0,
  float3 v1 : TEXCOORD1,
  out float4 o0 : SV_Target0)
{
  float4 r0,r1,r2,r3,r4,r5,r11;
  uint4 bitmask, uiDest;
  float4 fDest;

  float4 stereo = StereoParams.Load(0);
  float4 iniparams1 = IniParams.Load(int2(1,0));
  
  r0.x = dot(cb9[10].xyz, cb9[10].xyz);
  r0.y = t0.Sample(s0_s, v0.xy).x;
  r0.y = cb9[0].x + r0.y;
  r0.y = -cb9[0].y / r0.y;
  r1.xyz = v1.xyz * -r0.yyy;
  r1.w = 1;
  
  //FOV is 0.6125 at normal camera.
  r11.xyzw=r1.xyzw;
  r11.x+=stereo.x*(1*stereo.y+r11.z)*(1 / cb12[0].x);
  
  r2.x = dot(cb9[1].xyzw, r11.xyzw);
  r2.y = dot(cb9[2].xyzw, r11.xyzw);
  r2.z = dot(cb9[3].xyzw, r11.xyzw);
  //r2.x+=stereo.x*(r2.z-stereo.y)*0.5;
  r0.y = dot(cb9[10].xyz, r2.xyz);
  //r2.x+=stereo.x*(r0.y-stereo.y)*0.5;
  r0.z = dot(r2.xyz, r2.xyz);
  r0.w = -r0.y * 2 + r0.z;
  r0.w = r0.w + r0.x;
  r1.x = r0.x * r0.z;
  r1.x = r0.w * cb9[4].w + -r1.x;
  r1.x = r0.y * r0.y + r1.x;
  r1.x = sqrt(r1.x);
  r0.y = r1.x + -r0.y;
  r0.x = r0.y + r0.x;
  r1.xyz = -cb9[10].xyz + r2.xyz;
  r1.xyz = r0.xxx * r1.xyz + cb9[10].xyz;
  r0.xyw = r1.xyz / r0.www;
  r1.x = dot(r0.xyw, r0.xyw);
  r1.x = rsqrt(r1.x);
  r1.xyz = r1.xxx * r0.xyw;
  r0.xyw = r0.xyw + -r2.xyz;
  r1.w = dot(r1.xz, r1.xz);
  r1.w = rsqrt(r1.w);
  r1.xz = r1.xz * r1.ww;
  r1.w = 1 + -abs(r1.y);
  r1.y = cmp(r1.y >= 0);
  r1.y = r1.y ? 1.000000 : 0;
  r1.xz = r1.xz * r1.ww;
  r1.xz = r1.xz * float2(0.5,0.5) + float2(0.5,0.5);
  r3.xyzw = t2.Sample(s2_s, r1.xz).xyzw;
  r1.xz = cb9[8].xy * r1.xz;
  r1.xz = frac(r1.xz);
  r1.xz = float2(-0.5,-0.5) + r1.xz;
  r1.x = dot(r1.xz, r1.xz);
  r1.x = sqrt(r1.x);
  r1.x = -r3.w * 1.10000002 + r1.x;
  r1.z = 1 + -r3.y;
  r1.w = r3.y + -r1.z;
  r3.y = r1.y * r1.w + r1.z;
  r1.y = -0.200000048 * r3.w;
  r1.y = 1 / r1.y;
  r1.x = saturate(r1.x * r1.y);
  r1.yzw = r3.xyz * float3(2,2,2) + float3(-1,-1,-1);
  r2.w = dot(r0.xyw, r0.xyw);
  r2.w = rsqrt(r2.w);
  r0.xyw = r2.www * r0.xyw;
  r2.w = dot(r0.xyw, r1.yzw);
  r3.x = r2.w + r2.w;
  r2.w = min(1, abs(r2.w));
  r1.yzw = -r1.yzw * r3.xxx + r0.xyw;
  r3.x = dot(cb9[5].xyz, r1.yzw);
  r3.y = dot(cb9[6].xyz, r1.yzw);
  r3.z = dot(cb9[7].xyz, r1.yzw);
  r1.yzw = float3(-1,1,1) * r3.xyz;
  r1.yzw = t3.SampleLevel(s3_s, r1.yzw, 0).xyz;
  r1.yzw = r1.yzw * r2.www;
  r3.xyzw = t1.Sample(s1_s, v0.xy).xyzw;
  r3.xyz = float3(-0.5,-0.5,-0.5) + r3.xyz;
  r3.xyz = r3.xyz + r3.xyz;
  r4.x = dot(cb9[1].xyz, r3.xyz);
  r4.y = dot(cb9[2].xyz, r3.xyz);
  r4.z = dot(cb9[3].xyz, r3.xyz);
  r0.x = saturate(dot(r0.xyw, r4.xyz));
  r0.xyw = r1.yzw * r0.xxx;
  r1.y = r1.x * -2 + 3;
  r1.x = r1.x * r1.x;
  r1.x = r1.y * r1.x;
  r0.xyw = r1.xxx * r0.xyw;
  r0.xyw = cb9[10].www * r0.xyw;
  r1.x = dot(cb9[9].xyz, cb9[9].xyz);
  r1.y = dot(cb9[9].xyz, r2.xyz);
  r1.z = -r1.y * 2 + r0.z;
  r1.z = r1.z + r1.x;
  r1.w = r1.x * r0.z;
  r1.w = r1.z * cb9[4].w + -r1.w;
  r1.w = r1.y * r1.y + r1.w;
  r1.w = sqrt(r1.w);
  r1.y = r1.w + -r1.y;
  r1.x = r1.y + r1.x;
  r3.xyz = -cb9[9].xyz + r2.xyz;
  r1.xyw = r1.xxx * r3.xyz + cb9[9].xyz;
  r1.xyz = r1.xyw / r1.zzz;
  r1.w = dot(r1.xyz, r1.xyz);
  r1.w = rsqrt(r1.w);
  r3.xyz = r1.xyz * r1.www;
  r1.xyz = r1.xyz + -r2.xyz;
  r1.w = dot(r3.xz, r3.xz);
  r1.w = rsqrt(r1.w);
  r3.xz = r3.xz * r1.ww;
  r1.w = 1 + -abs(r3.y);
  r2.w = cmp(r3.y >= 0);
  r2.w = r2.w ? 1.000000 : 0;
  r3.xy = r3.xz * r1.ww;
  r3.xy = r3.xy * float2(0.5,0.5) + float2(0.5,0.5);
  r5.xyzw = t2.Sample(s2_s, r3.xy).xyzw;
  r3.xy = cb9[8].xy * r3.xy;
  r3.xy = frac(r3.xy);
  r3.xy = float2(-0.5,-0.5) + r3.xy;
  r1.w = dot(r3.xy, r3.xy);
  r1.w = sqrt(r1.w);
  r1.w = -r5.w * 1.10000002 + r1.w;
  r3.x = 1 + -r5.y;
  r3.y = r5.y + -r3.x;
  r5.y = r2.w * r3.y + r3.x;
  r2.w = -0.200000048 * r5.w;
  r2.w = 1 / r2.w;
  r1.w = saturate(r2.w * r1.w);
  r3.xyz = r5.xyz * float3(2,2,2) + float3(-1,-1,-1);
  r2.w = dot(r1.xyz, r1.xyz);
  r2.w = rsqrt(r2.w);
  r1.xyz = r2.www * r1.xyz;
  r2.w = dot(r1.xyz, r3.xyz);
  r4.w = r2.w + r2.w;
  r2.w = min(1, abs(r2.w));
  r3.xyz = -r3.xyz * r4.www + r1.xyz;
  r1.x = saturate(dot(r1.xyz, r4.xyz));
  r5.x = dot(cb9[5].xyz, r3.xyz);
  r5.y = dot(cb9[6].xyz, r3.xyz);
  r5.z = dot(cb9[7].xyz, r3.xyz);
  r3.xyz = float3(-1,1,1) * r5.xyz;
  r3.xyz = t3.SampleLevel(s3_s, r3.xyz, 0).xyz;
  r3.xyz = r3.xyz * r2.www;
  r1.xyz = r3.xyz * r1.xxx;
  r2.w = r1.w * -2 + 3;
  r1.w = r1.w * r1.w;
  r1.w = r2.w * r1.w;
  r1.xyz = r1.xyz * r1.www;
  r0.xyw = r1.xyz * cb9[9].www + r0.xyw;
  r1.x = dot(cb9[11].xyz, cb9[11].xyz);
  r1.y = dot(cb9[11].xyz, r2.xyz);
  r1.z = -r1.y * 2 + r0.z;
  r1.z = r1.z + r1.x;
  r1.w = r1.x * r0.z;
  r1.w = r1.z * cb9[4].w + -r1.w;
  r1.w = r1.y * r1.y + r1.w;
  r1.w = sqrt(r1.w);
  r1.y = r1.w + -r1.y;
  r1.x = r1.y + r1.x;
  r3.xyz = -cb9[11].xyz + r2.xyz;
  r1.xyw = r1.xxx * r3.xyz + cb9[11].xyz;
  r1.xyz = r1.xyw / r1.zzz;
  r3.xyz = r1.xyz + -r2.xyz;
  r1.w = dot(r3.xyz, r3.xyz);
  r1.w = rsqrt(r1.w);
  r3.xyz = r3.xyz * r1.www;
  r1.w = dot(r1.xyz, r1.xyz);
  r1.w = rsqrt(r1.w);
  r1.xyz = r1.xyz * r1.www;
  r1.w = dot(r1.xz, r1.xz);
  r1.w = rsqrt(r1.w);
  r1.xz = r1.xz * r1.ww;
  r1.w = 1 + -abs(r1.y);
  r1.y = cmp(r1.y >= 0);
  r1.y = r1.y ? 1.000000 : 0;
  r1.xz = r1.xz * r1.ww;
  r1.xz = r1.xz * float2(0.5,0.5) + float2(0.5,0.5);
  r5.xyzw = t2.Sample(s2_s, r1.xz).xyzw;
  r1.xz = cb9[8].xy * r1.xz;
  r1.xz = frac(r1.xz);
  r1.xz = float2(-0.5,-0.5) + r1.xz;
  r1.x = dot(r1.xz, r1.xz);
  r1.x = sqrt(r1.x);
  r1.x = -r5.w * 1.10000002 + r1.x;
  r1.z = 1 + -r5.y;
  r1.w = r5.y + -r1.z;
  r5.y = r1.y * r1.w + r1.z;
  r1.y = -0.200000048 * r5.w;
  r1.y = 1 / r1.y;
  r1.x = saturate(r1.x * r1.y);
  r1.yzw = r5.xyz * float3(2,2,2) + float3(-1,-1,-1);
  r2.w = dot(r3.xyz, r1.yzw);
  r4.w = r2.w + r2.w;
  r2.w = min(1, abs(r2.w));
  r1.yzw = -r1.yzw * r4.www + r3.xyz;
  r3.x = saturate(dot(r3.xyz, r4.xyz));
  r3.y = dot(r2.xyz, r4.xyz);
  r3.y = cb9[12].y * r3.y;
  r3.y = max(0, r3.y);
  r4.x = dot(cb9[5].xyz, r1.yzw);
  r4.y = dot(cb9[6].xyz, r1.yzw);
  r4.z = dot(cb9[7].xyz, r1.yzw);
  r1.yzw = float3(-1,1,1) * r4.xyz;
  r1.yzw = t3.SampleLevel(s3_s, r1.yzw, 0).xyz;
  r1.yzw = r1.yzw * r2.www;
  r1.yzw = r1.yzw * r3.xxx;
  r2.w = r1.x * -2 + 3;
  r1.x = r1.x * r1.x;
  r1.x = r2.w * r1.x;
  r1.xyz = r1.yzw * r1.xxx;
  r0.xyw = r1.xyz * cb9[11].www + r0.xyw;
  r1.x = dot(cb9[5].xyz, r2.xyz);
  r1.y = dot(cb9[6].xyz, r2.xyz);
  r1.z = dot(cb9[7].xyz, r2.xyz);
  r1.xyz = float3(-1,1,1) * r1.xyz;
  r1.xyz = t3.SampleLevel(s3_s, r1.xyz, cb9[12].x).xyz;
  r1.w = sqrt(r0.z);
  r1.w = r3.y / r1.w;
  r0.xyw = r1.xyz * r1.www + r0.xyw;
  r1.x = cb9[13].y * r0.z + cb9[13].x;
  r0.z = cmp(r0.z >= cb9[4].w);
  r0.z = r0.z ? 1.000000 : 0;
  r1.x = 1 / r1.x;
  r0.xyw = r1.xxx * r0.xyw;
  r0.xyz = r0.zzz * r0.xyw;
  r0.w = cb9[14].y + -cb9[14].x;
  r0.w = r3.w * r0.w + cb9[14].x;
  r1.xyz = r0.xyz * r0.www;
  r0.xyz = r0.xyz * r0.www + cb9[15].xxx;
  o0.xyz = max(float3(0,0,0), r0.xyz);
  r0.x = dot(r1.xyz, float3(1,1,1));
  r0.x = -0.00392156886 + r0.x;
  r0.x = cmp(r0.x < 0);
  if (r0.x != 0) discard;
  o0.w = 0;
  return;
}

/*~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//   using 3Dmigoto v1.3.11 on Sat Aug 04 15:47:54 2018
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// TEXCOORD                 0   xy          0     NONE   float   xy
// TEXCOORD                 1   xyz         1     NONE   float   xyz
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
ps_5_0
dcl_globalFlags refactoringAllowed
dcl_constantbuffer cb9[16], immediateIndexed
dcl_sampler s0, mode_default
dcl_sampler s1, mode_default
dcl_sampler s2, mode_default
dcl_sampler s3, mode_default
dcl_resource_texture2d (float,float,float,float) t0
dcl_resource_texture2d (float,float,float,float) t1
dcl_resource_texture2d (float,float,float,float) t2
dcl_resource_texturecube (float,float,float,float) t3
dcl_input_ps linear v0.xy
dcl_input_ps linear v1.xyz
dcl_output o0.xyzw
dcl_temps 6
dp3 r0.x, cb9[10].xyzx, cb9[10].xyzx
sample_indexable(texture2d)(float,float,float,float) r0.y, v0.xyxx, t0.yxzw, s0
add r0.y, r0.y, cb9[0].x
div r0.y, -cb9[0].y, r0.y
mul r1.xyz, -r0.yyyy, v1.xyzx
mov r1.w, l(1.000000)
dp4 r2.x, cb9[1].xyzw, r1.xyzw
dp4 r2.y, cb9[2].xyzw, r1.xyzw
dp4 r2.z, cb9[3].xyzw, r1.xyzw
dp3 r0.y, cb9[10].xyzx, r2.xyzx
dp3 r0.z, r2.xyzx, r2.xyzx
mad r0.w, -r0.y, l(2.000000), r0.z
add r0.w, r0.x, r0.w
mul r1.x, r0.z, r0.x
mad r1.x, r0.w, cb9[4].w, -r1.x
mad r1.x, r0.y, r0.y, r1.x
sqrt r1.x, r1.x
add r0.y, -r0.y, r1.x
add r0.x, r0.x, r0.y
add r1.xyz, r2.xyzx, -cb9[10].xyzx
mad r1.xyz, r0.xxxx, r1.xyzx, cb9[10].xyzx
div r0.xyw, r1.xyxz, r0.wwww
dp3 r1.x, r0.xywx, r0.xywx
rsq r1.x, r1.x
mul r1.xyz, r0.xywx, r1.xxxx
add r0.xyw, -r2.xyxz, r0.xyxw
dp2 r1.w, r1.xzxx, r1.xzxx
rsq r1.w, r1.w
mul r1.xz, r1.wwww, r1.xxzx
add r1.w, -|r1.y|, l(1.000000)
ge r1.y, r1.y, l(0.000000)
and r1.y, r1.y, l(0x3f800000)
mul r1.xz, r1.wwww, r1.xxzx
mad r1.xz, r1.xxzx, l(0.500000, 0.000000, 0.500000, 0.000000), l(0.500000, 0.000000, 0.500000, 0.000000)
sample_indexable(texture2d)(float,float,float,float) r3.xyzw, r1.xzxx, t2.xyzw, s2
mul r1.xz, r1.xxzx, cb9[8].xxyx
frc r1.xz, r1.xxzx
add r1.xz, r1.xxzx, l(-0.500000, 0.000000, -0.500000, 0.000000)
dp2 r1.x, r1.xzxx, r1.xzxx
sqrt r1.x, r1.x
mad r1.x, -r3.w, l(1.100000), r1.x
add r1.z, -r3.y, l(1.000000)
add r1.w, -r1.z, r3.y
mad r3.y, r1.y, r1.w, r1.z
mul r1.y, r3.w, l(-0.200000048)
div r1.y, l(1.000000, 1.000000, 1.000000, 1.000000), r1.y
mul_sat r1.x, r1.y, r1.x
mad r1.yzw, r3.xxyz, l(0.000000, 2.000000, 2.000000, 2.000000), l(0.000000, -1.000000, -1.000000, -1.000000)
dp3 r2.w, r0.xywx, r0.xywx
rsq r2.w, r2.w
mul r0.xyw, r0.xyxw, r2.wwww
dp3 r2.w, r0.xywx, r1.yzwy
add r3.x, r2.w, r2.w
min r2.w, |r2.w|, l(1.000000)
mad r1.yzw, -r1.yyzw, r3.xxxx, r0.xxyw
dp3 r3.x, cb9[5].xyzx, r1.yzwy
dp3 r3.y, cb9[6].xyzx, r1.yzwy
dp3 r3.z, cb9[7].xyzx, r1.yzwy
mul r1.yzw, r3.xxyz, l(0.000000, -1.000000, 1.000000, 1.000000)
sample_l_indexable(texturecube)(float,float,float,float) r1.yzw, r1.yzwy, t3.wxyz, s3, l(0.000000)
mul r1.yzw, r2.wwww, r1.yyzw
sample_indexable(texture2d)(float,float,float,float) r3.xyzw, v0.xyxx, t1.xyzw, s1
add r3.xyz, r3.xyzx, l(-0.500000, -0.500000, -0.500000, 0.000000)
add r3.xyz, r3.xyzx, r3.xyzx
dp3 r4.x, cb9[1].xyzx, r3.xyzx
dp3 r4.y, cb9[2].xyzx, r3.xyzx
dp3 r4.z, cb9[3].xyzx, r3.xyzx
dp3_sat r0.x, r0.xywx, r4.xyzx
mul r0.xyw, r0.xxxx, r1.yzyw
mad r1.y, r1.x, l(-2.000000), l(3.000000)
mul r1.x, r1.x, r1.x
mul r1.x, r1.x, r1.y
mul r0.xyw, r0.xyxw, r1.xxxx
mul r0.xyw, r0.xyxw, cb9[10].wwww
dp3 r1.x, cb9[9].xyzx, cb9[9].xyzx
dp3 r1.y, cb9[9].xyzx, r2.xyzx
mad r1.z, -r1.y, l(2.000000), r0.z
add r1.z, r1.x, r1.z
mul r1.w, r0.z, r1.x
mad r1.w, r1.z, cb9[4].w, -r1.w
mad r1.w, r1.y, r1.y, r1.w
sqrt r1.w, r1.w
add r1.y, -r1.y, r1.w
add r1.x, r1.x, r1.y
add r3.xyz, r2.xyzx, -cb9[9].xyzx
mad r1.xyw, r1.xxxx, r3.xyxz, cb9[9].xyxz
div r1.xyz, r1.xywx, r1.zzzz
dp3 r1.w, r1.xyzx, r1.xyzx
rsq r1.w, r1.w
mul r3.xyz, r1.wwww, r1.xyzx
add r1.xyz, -r2.xyzx, r1.xyzx
dp2 r1.w, r3.xzxx, r3.xzxx
rsq r1.w, r1.w
mul r3.xz, r1.wwww, r3.xxzx
add r1.w, -|r3.y|, l(1.000000)
ge r2.w, r3.y, l(0.000000)
and r2.w, r2.w, l(0x3f800000)
mul r3.xy, r1.wwww, r3.xzxx
mad r3.xy, r3.xyxx, l(0.500000, 0.500000, 0.000000, 0.000000), l(0.500000, 0.500000, 0.000000, 0.000000)
sample_indexable(texture2d)(float,float,float,float) r5.xyzw, r3.xyxx, t2.xyzw, s2
mul r3.xy, r3.xyxx, cb9[8].xyxx
frc r3.xy, r3.xyxx
add r3.xy, r3.xyxx, l(-0.500000, -0.500000, 0.000000, 0.000000)
dp2 r1.w, r3.xyxx, r3.xyxx
sqrt r1.w, r1.w
mad r1.w, -r5.w, l(1.100000), r1.w
add r3.x, -r5.y, l(1.000000)
add r3.y, -r3.x, r5.y
mad r5.y, r2.w, r3.y, r3.x
mul r2.w, r5.w, l(-0.200000048)
div r2.w, l(1.000000, 1.000000, 1.000000, 1.000000), r2.w
mul_sat r1.w, r1.w, r2.w
mad r3.xyz, r5.xyzx, l(2.000000, 2.000000, 2.000000, 0.000000), l(-1.000000, -1.000000, -1.000000, 0.000000)
dp3 r2.w, r1.xyzx, r1.xyzx
rsq r2.w, r2.w
mul r1.xyz, r1.xyzx, r2.wwww
dp3 r2.w, r1.xyzx, r3.xyzx
add r4.w, r2.w, r2.w
min r2.w, |r2.w|, l(1.000000)
mad r3.xyz, -r3.xyzx, r4.wwww, r1.xyzx
dp3_sat r1.x, r1.xyzx, r4.xyzx
dp3 r5.x, cb9[5].xyzx, r3.xyzx
dp3 r5.y, cb9[6].xyzx, r3.xyzx
dp3 r5.z, cb9[7].xyzx, r3.xyzx
mul r3.xyz, r5.xyzx, l(-1.000000, 1.000000, 1.000000, 0.000000)
sample_l_indexable(texturecube)(float,float,float,float) r3.xyz, r3.xyzx, t3.xyzw, s3, l(0.000000)
mul r3.xyz, r2.wwww, r3.xyzx
mul r1.xyz, r1.xxxx, r3.xyzx
mad r2.w, r1.w, l(-2.000000), l(3.000000)
mul r1.w, r1.w, r1.w
mul r1.w, r1.w, r2.w
mul r1.xyz, r1.wwww, r1.xyzx
mad r0.xyw, r1.xyxz, cb9[9].wwww, r0.xyxw
dp3 r1.x, cb9[11].xyzx, cb9[11].xyzx
dp3 r1.y, cb9[11].xyzx, r2.xyzx
mad r1.z, -r1.y, l(2.000000), r0.z
add r1.z, r1.x, r1.z
mul r1.w, r0.z, r1.x
mad r1.w, r1.z, cb9[4].w, -r1.w
mad r1.w, r1.y, r1.y, r1.w
sqrt r1.w, r1.w
add r1.y, -r1.y, r1.w
add r1.x, r1.x, r1.y
add r3.xyz, r2.xyzx, -cb9[11].xyzx
mad r1.xyw, r1.xxxx, r3.xyxz, cb9[11].xyxz
div r1.xyz, r1.xywx, r1.zzzz
add r3.xyz, -r2.xyzx, r1.xyzx
dp3 r1.w, r3.xyzx, r3.xyzx
rsq r1.w, r1.w
mul r3.xyz, r1.wwww, r3.xyzx
dp3 r1.w, r1.xyzx, r1.xyzx
rsq r1.w, r1.w
mul r1.xyz, r1.wwww, r1.xyzx
dp2 r1.w, r1.xzxx, r1.xzxx
rsq r1.w, r1.w
mul r1.xz, r1.wwww, r1.xxzx
add r1.w, -|r1.y|, l(1.000000)
ge r1.y, r1.y, l(0.000000)
and r1.y, r1.y, l(0x3f800000)
mul r1.xz, r1.wwww, r1.xxzx
mad r1.xz, r1.xxzx, l(0.500000, 0.000000, 0.500000, 0.000000), l(0.500000, 0.000000, 0.500000, 0.000000)
sample_indexable(texture2d)(float,float,float,float) r5.xyzw, r1.xzxx, t2.xyzw, s2
mul r1.xz, r1.xxzx, cb9[8].xxyx
frc r1.xz, r1.xxzx
add r1.xz, r1.xxzx, l(-0.500000, 0.000000, -0.500000, 0.000000)
dp2 r1.x, r1.xzxx, r1.xzxx
sqrt r1.x, r1.x
mad r1.x, -r5.w, l(1.100000), r1.x
add r1.z, -r5.y, l(1.000000)
add r1.w, -r1.z, r5.y
mad r5.y, r1.y, r1.w, r1.z
mul r1.y, r5.w, l(-0.200000048)
div r1.y, l(1.000000, 1.000000, 1.000000, 1.000000), r1.y
mul_sat r1.x, r1.y, r1.x
mad r1.yzw, r5.xxyz, l(0.000000, 2.000000, 2.000000, 2.000000), l(0.000000, -1.000000, -1.000000, -1.000000)
dp3 r2.w, r3.xyzx, r1.yzwy
add r4.w, r2.w, r2.w
min r2.w, |r2.w|, l(1.000000)
mad r1.yzw, -r1.yyzw, r4.wwww, r3.xxyz
dp3_sat r3.x, r3.xyzx, r4.xyzx
dp3 r3.y, r2.xyzx, r4.xyzx
mul r3.y, r3.y, cb9[12].y
max r3.y, r3.y, l(0.000000)
dp3 r4.x, cb9[5].xyzx, r1.yzwy
dp3 r4.y, cb9[6].xyzx, r1.yzwy
dp3 r4.z, cb9[7].xyzx, r1.yzwy
mul r1.yzw, r4.xxyz, l(0.000000, -1.000000, 1.000000, 1.000000)
sample_l_indexable(texturecube)(float,float,float,float) r1.yzw, r1.yzwy, t3.wxyz, s3, l(0.000000)
mul r1.yzw, r2.wwww, r1.yyzw
mul r1.yzw, r3.xxxx, r1.yyzw
mad r2.w, r1.x, l(-2.000000), l(3.000000)
mul r1.x, r1.x, r1.x
mul r1.x, r1.x, r2.w
mul r1.xyz, r1.xxxx, r1.yzwy
mad r0.xyw, r1.xyxz, cb9[11].wwww, r0.xyxw
dp3 r1.x, cb9[5].xyzx, r2.xyzx
dp3 r1.y, cb9[6].xyzx, r2.xyzx
dp3 r1.z, cb9[7].xyzx, r2.xyzx
mul r1.xyz, r1.xyzx, l(-1.000000, 1.000000, 1.000000, 0.000000)
sample_l_indexable(texturecube)(float,float,float,float) r1.xyz, r1.xyzx, t3.xyzw, s3, cb9[12].x
sqrt r1.w, r0.z
div r1.w, r3.y, r1.w
mad r0.xyw, r1.xyxz, r1.wwww, r0.xyxw
mad r1.x, cb9[13].y, r0.z, cb9[13].x
ge r0.z, r0.z, cb9[4].w
and r0.z, r0.z, l(0x3f800000)
div r1.x, l(1.000000, 1.000000, 1.000000, 1.000000), r1.x
mul r0.xyw, r0.xyxw, r1.xxxx
mul r0.xyz, r0.xywx, r0.zzzz
add r0.w, -cb9[14].x, cb9[14].y
mad r0.w, r3.w, r0.w, cb9[14].x
mul r1.xyz, r0.wwww, r0.xyzx
mad r0.xyz, r0.xyzx, r0.wwww, cb9[15].xxxx
max o0.xyz, r0.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
dp3 r0.x, r1.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
add r0.x, r0.x, l(-0.00392156886)
lt r0.x, r0.x, l(0.000000)
discard_nz r0.x
mov o0.w, l(0)
ret
// Approximately 0 instruction slots used

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~*/
