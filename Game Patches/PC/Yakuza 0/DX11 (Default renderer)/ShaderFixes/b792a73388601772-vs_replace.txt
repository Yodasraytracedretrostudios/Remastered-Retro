//Glass reflection VS.
// ---- Created with 3Dmigoto v1.3.11 on Sat Aug 04 15:18:52 2018
cbuffer cb9 : register(b9)
{
  float4 cb9[4];
}

cbuffer cb12 : register(b12)
{
  float4 cb12[31];
}

cbuffer cb10 : register(b10)
{
  float4 cb10[3];
}




// 3Dmigoto declarations
#define cmp -
Texture1D<float4> IniParams : register(t120);
Texture2D<float4> StereoParams : register(t125);


void main(
  float4 v0 : POSITION0,
  float4 v1 : NORMAL0,
  float4 v2 : TANGENT0,
  float4 v3 : COLOR0,
  float2 v4 : TEXCOORD0,
  out float4 o0 : TEXCOORD0,
  out float3 o1 : TEXCOORD1,
  out float4 o2 : SV_POSITION0)
{
  float4 r0,r1,r2;
  uint4 bitmask, uiDest;
  float4 fDest;

  float4 stereo = StereoParams.Load(0);
  
  r0.w = 1;
  r1.xyz = v0.xyz;
  r1.w = 1;
  r0.x = dot(cb10[0].xyzw, r1.xyzw);
  r0.y = dot(cb10[1].xyzw, r1.xyzw);
  r0.z = dot(cb10[2].xyzw, r1.xyzw);
  r1.x = dot(cb12[4].xyzw, r0.xyzw);
  r1.y = dot(cb12[5].xyzw, r0.xyzw);
  r1.z = dot(cb12[6].xyzw, r0.xyzw);
  r0.xyz = -cb12[30].xyz + r0.xyz;
  r0.w = dot(r1.xyz, r1.xyz);
  r0.w = sqrt(r0.w);
  o0.x = cb9[0].y * r0.w + cb9[0].x;
  r1.w = 1;
  o0.y = dot(cb9[1].xyzw, r1.xyzw);
  o0.z = dot(cb9[2].xyzw, r1.xyzw);
  o0.w = dot(cb9[3].xyzw, r1.xyzw);
  //o0.x+=stereo.x*(o0.w-stereo.y);
  r1.xyz = float3(-0.5,-0.5,-0.5) + v1.xyz;
  r1.xyz = r1.xyz + r1.xyz;
  r2.x = dot(cb10[0].xyz, r1.xyz);
  r2.y = dot(cb10[1].xyz, r1.xyz);
  r2.z = dot(cb10[2].xyz, r1.xyz);
  r1.x = dot(cb12[4].xyz, r2.xyz);
  r1.y = dot(cb12[5].xyz, r2.xyz);
  r1.z = dot(cb12[6].xyz, r2.xyz);
  r0.w = dot(r1.xyz, r1.xyz);
  r0.w = rsqrt(r0.w);
  r1.xyz = r1.xyz * r0.www;
  o1.xyz = cb9[0].www * r1.xyz;
  r1.x = dot(cb12[4].xyz, r0.xyz);
  r1.y = dot(cb12[5].xyz, r0.xyz);
  r1.z = dot(cb12[6].xyz, r0.xyz);
  r1.w = 1;
  r0.x = dot(cb12[2].xyzw, r1.xyzw);
  o2.z = -9.99999975e-006 + r0.x;
  o2.x = dot(cb12[0].xyzw, r1.xyzw);
  o2.y = dot(cb12[1].xyzw, r1.xyzw);
  o2.w = dot(cb12[3].xyzw, r1.xyzw);
  return;
}

/*~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//   using 3Dmigoto v1.3.11 on Sat Aug 04 15:18:52 2018
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyz
// NORMAL                   0   xyzw        1     NONE   float   xyz
// TANGENT                  0   xyzw        2     NONE   float
// COLOR                    0   xyzw        3     NONE   float
// TEXCOORD                 0   xy          4     NONE   float
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// TEXCOORD                 0   xyzw        0     NONE   float   xyzw
// TEXCOORD                 1   xyz         1     NONE   float   xyz
// SV_POSITION              0   xyzw        2      POS   float   xyzw
//
vs_5_0
dcl_globalFlags refactoringAllowed
dcl_constantbuffer cb10[3], immediateIndexed
dcl_constantbuffer cb12[31], immediateIndexed
dcl_constantbuffer cb9[4], immediateIndexed
dcl_input v0.xyz
dcl_input v1.xyz
dcl_output o0.xyzw
dcl_output o1.xyz
dcl_output_siv o2.xyzw, position
dcl_temps 3
mov r0.w, l(1.000000)
mov r1.xyz, v0.xyzx
mov r1.w, l(1.000000)
dp4 r0.x, cb10[0].xyzw, r1.xyzw
dp4 r0.y, cb10[1].xyzw, r1.xyzw
dp4 r0.z, cb10[2].xyzw, r1.xyzw
dp4 r1.x, cb12[4].xyzw, r0.xyzw
dp4 r1.y, cb12[5].xyzw, r0.xyzw
dp4 r1.z, cb12[6].xyzw, r0.xyzw
add r0.xyz, r0.xyzx, -cb12[30].xyzx
dp3 r0.w, r1.xyzx, r1.xyzx
sqrt r0.w, r0.w
mad o0.x, cb9[0].y, r0.w, cb9[0].x
mov r1.w, l(1.000000)
dp4 o0.y, cb9[1].xyzw, r1.xyzw
dp4 o0.z, cb9[2].xyzw, r1.xyzw
dp4 o0.w, cb9[3].xyzw, r1.xyzw
add r1.xyz, v1.xyzx, l(-0.500000, -0.500000, -0.500000, 0.000000)
add r1.xyz, r1.xyzx, r1.xyzx
dp3 r2.x, cb10[0].xyzx, r1.xyzx
dp3 r2.y, cb10[1].xyzx, r1.xyzx
dp3 r2.z, cb10[2].xyzx, r1.xyzx
dp3 r1.x, cb12[4].xyzx, r2.xyzx
dp3 r1.y, cb12[5].xyzx, r2.xyzx
dp3 r1.z, cb12[6].xyzx, r2.xyzx
dp3 r0.w, r1.xyzx, r1.xyzx
rsq r0.w, r0.w
mul r1.xyz, r0.wwww, r1.xyzx
mul o1.xyz, r1.xyzx, cb9[0].wwww
dp3 r1.x, cb12[4].xyzx, r0.xyzx
dp3 r1.y, cb12[5].xyzx, r0.xyzx
dp3 r1.z, cb12[6].xyzx, r0.xyzx
mov r1.w, l(1.000000)
dp4 r0.x, cb12[2].xyzw, r1.xyzw
add o2.z, r0.x, l(-0.000010)
dp4 o2.x, cb12[0].xyzw, r1.xyzw
dp4 o2.y, cb12[1].xyzw, r1.xyzw
dp4 o2.w, cb12[3].xyzw, r1.xyzw
ret
// Approximately 0 instruction slots used

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~*/
