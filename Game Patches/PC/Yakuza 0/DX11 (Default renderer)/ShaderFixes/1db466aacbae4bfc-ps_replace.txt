//Shadows daytime high.
// ---- Created with 3Dmigoto v1.3.11 on Fri Aug 03 19:56:50 2018
Texture2D<float4> t15 : register(t15);

Texture2D<float4> t14 : register(t14);

Texture2D<float4> t13 : register(t13);

Texture2D<float4> t12 : register(t12);

Texture2D<float4> t0 : register(t0);

SamplerComparisonState s15_s : register(s15);

SamplerComparisonState s14_s : register(s14);

SamplerComparisonState s13_s : register(s13);

SamplerComparisonState s12_s : register(s12);

SamplerState s0_s : register(s0);

cbuffer cb2 : register(b2)
{
  float4 cb2[17];
}

cbuffer cb1 : register(b1)
{
  float4 cb1[11];
}

cbuffer cb9 : register(b9)
{
  float4 cb9[1];
}


// 3Dmigoto declarations
#define cmp -
Texture1D<float4> IniParams : register(t120);
Texture2D<float4> StereoParams : register(t125);


void main(
  float4 v0 : TEXCOORD0,
  float3 v1 : TEXCOORD1,
  float4 v2 : SV_POSITION0,
  out float4 o0 : SV_Target0,
  out float4 o1 : SV_Target1)
{
  float4 r0,r1,r2,r3,r4,r5,r11;
  uint4 bitmask, uiDest;
  float4 fDest;

  float4 stereo = StereoParams.Load(0);
  float4 iniparams1 = IniParams.Load(int2(1,0));
  
  r0.x = t0.Sample(s0_s, v0.xy).x;
  r0.x = cb2[0].x + r0.x;
  r0.x = -cb2[0].y / r0.x;
  r1.xyz = v1.xyz * -r0.xxx;
  r1.w = 1;
  
  float mult;
  mult=1;
  if (cb9[0].x!=0)
  {
	mult=cb9[0].x;
  }
  
  //FOV is 0.6125 at normal camera.
  r11.xyzw=r1.xyzw;
  float depth = dot(cb2[8].xyzw, r11.xyzw);
  r11.x+=stereo.x*(1*stereo.y+r11.z)*mult;
  
  float fshadows;
  fshadows=iniparams1.x;
  
  r2.x = dot(cb2[5].xyzw, r11.xyzw);
  r2.y = dot(cb2[6].xyzw, r11.xyzw);
  r2.z = dot(cb2[7].xyzw, r11.xyzw);
  r0.y = dot(cb2[8].xyzw, r11.xyzw);
  r0.yzw = r2.xyz / r0.yyy;
  r2.x = cb1[10].w * 0.0009765625;
  r3.xyzw = cb1[10].zzzz * float4(-0.00048828125,-0.00048828125,0.00048828125,-0.00048828125) + r0.yzyz;
  r4.xyzw = saturate(r3.xyzw);
  r4.xyzw = cmp(r3.xyzw == r4.xyzw);
  r2.yz = r4.yw ? r4.xz : 0;
  r0.w = min(1, r0.w);
  r2.w = t15.SampleCmp(s15_s, r3.xy, r0.w).x;
  if (r2.y == 0) {
    r2.w = 1;
  }
  r4.x = r2.y ? r2.w : 1;
  r2.y = t15.SampleCmp(s15_s, r3.zw, r0.w).x;
  if (r2.z == 0) {
    r2.y = 1;
  }
  r4.y = r2.z ? r2.y : 1;
  r3.xyzw = cb1[10].zzzz * float4(-0.00048828125,0.00048828125,0.00048828125,0.00048828125) + r0.yzyz;
  r5.xyzw = saturate(r3.xyzw);
  r5.xyzw = cmp(r3.xyzw == r5.xyzw);
  r0.yz = r5.yw ? r5.xz : 0;
  r2.y = t15.SampleCmp(s15_s, r3.xy, r0.w).x;
  if (r0.y == 0) {
    r2.y = 1;
  }
  r4.z = r0.y ? r2.y : 1;
  r0.y = t15.SampleCmp(s15_s, r3.zw, r0.w).x;
  if (r0.z == 0) {
    r0.y = 1;
  }
  r4.w = r0.z ? r0.y : 1;
  o1.x = dot(r4.xyzw, float4(0.25,0.25,0.25,0.25));
  
  r11.xyzw=r1.xyzw;
  depth = dot(cb2[4].xyzw, r11.xyzw);
  r11.x+=stereo.x*(1*stereo.y+r11.z)*mult;
  
  r3.x = dot(cb2[1].xyzw, r11.xyzw);
  r3.y = dot(cb2[2].xyzw, r11.xyzw);
  r3.z = dot(cb2[3].xyzw, r11.xyzw);
  r0.y = dot(cb2[4].xyzw, r11.xyzw);
  r0.yzw = r3.xyz / r0.yyy;
  r3.xyzw = cb1[10].wwww * float4(-0.00048828125,-0.00048828125,0.00048828125,-0.00048828125) + r0.yzyz;
  r4.xyzw = saturate(r3.xyzw);
  r4.xyzw = cmp(r3.xyzw == r4.xyzw);
  r2.yz = r4.yw ? r4.xz : 0;
  r0.w = min(1, r0.w);
  r2.w = t14.SampleCmp(s14_s, r3.xy, r0.w).x;
  if (r2.y == 0) {
    r2.w = 1;
  }
  r4.x = r2.y ? r2.w : 1;
  r2.y = t14.SampleCmp(s14_s, r3.zw, r0.w).x;
  if (r2.z == 0) {
    r2.y = 1;
  }
  r4.y = r2.z ? r2.y : 1;
  r3.xyzw = cb1[10].wwww * float4(-0.00048828125,0.00048828125,0.00048828125,0.00048828125) + r0.yzyz;
  r5.xyzw = saturate(r3.xyzw);
  r5.xyzw = cmp(r3.xyzw == r5.xyzw);
  r0.yz = r5.yw ? r5.xz : 0;
  r2.y = t14.SampleCmp(s14_s, r3.xy, r0.w).x;
  if (r0.y == 0) {
    r2.y = 1;
  }
  r4.z = r0.y ? r2.y : 1;
  r0.y = t14.SampleCmp(s14_s, r3.zw, r0.w).x;
  if (r0.z == 0) {
    r0.y = 1;
  }
  r4.w = r0.z ? r0.y : 1;
  o1.y = dot(r4.xyzw, float4(0.25,0.25,0.25,0.25));
  
  r11.xyzw=r1.xyzw;
  depth = dot(cb2[12].xyzw, r11.xyzw);
  r11.x+=stereo.x*(1*stereo.y+r11.z)*mult;
  
  r3.x = dot(cb2[9].xyzw, r11.xyzw);
  r3.y = dot(cb2[10].xyzw, r11.xyzw);
  r3.z = dot(cb2[11].xyzw, r11.xyzw);
  r0.y = dot(cb2[12].xyzw, r11.xyzw);
  r0.yzw = r3.xyz / r0.yyy;
  r2.yz = float2(-0.5,-0.5) + v2.xy;
  r2.yz = float2(0.5,0.5) * r2.yz;
  r2.yz = frac(r2.yz);
  r2.yz = cmp(float2(0.25,0.25) < r2.yz);
  r3.xy = r2.yz ? float2(1,1) : 0;
  r2.y = r3.y + r3.x;
  r2.z = cmp(1.10000002 < r2.y);
  r3.z = r2.z ? 0 : r2.y;
  r2.yz = float2(-0.5,-0.5) + r3.xz;
  r0.yz = r2.xx * r2.yz + r0.yz;
  r2.xy = saturate(r0.yz);
  r2.xy = cmp(r0.yz == r2.xy);
  r2.x = r2.y ? r2.x : 0;
  r0.w = min(1, r0.w);
  o1.z = t13.SampleCmp(s13_s, r0.yz, r0.w).x;
  if (r2.x == 0) {
    o1.z = 1;
  }
  
  r11.xyzw=r1.xyzw;
  depth = dot(cb2[12].xyzw, r11.xyzw);
  r11.x+=stereo.x*(1*stereo.y+r11.z)*mult;
  
  r2.x = dot(cb2[13].xyzw, r11.xyzw);
  r2.y = dot(cb2[14].xyzw, r11.xyzw);
  r2.z = dot(cb2[15].xyzw, r11.xyzw);
  r0.y = dot(cb2[16].xyzw, r11.xyzw);
  r2.x+=stereo.x*(r0.y-stereo.y)*0.5;
  r0.yzw = r2.xyz / r0.yyy;
  r1.xyzw = cb1[10].zzzz * float4(-0.00048828125,-0.00048828125,0.00048828125,-0.00048828125) + r0.yzyz;
  r2.xyzw = saturate(r1.xyzw);
  r2.xyzw = cmp(r1.xyzw == r2.xyzw);
  r2.xy = r2.yw ? r2.xz : 0;
  r1.xyzw = float4(0.5,0.5,0.5,0.5) * r1.xyzw;
  r0.w = min(1, r0.w);
  r3.x = t12.SampleCmp(s12_s, r1.xy, r0.w).x;
  if (r2.x != 0 && fshadows!=1) {
    r2.xz = saturate(r1.xy);
    r1.xy = cmp(r1.xy == r2.xz);
    r1.x = r1.y ? r1.x : 0;
    if (r1.x == 0) {
      r3.x = 1;
    }
  } else {
    r3.x = 1;
  }
  r3.y = t12.SampleCmp(s12_s, r1.zw, r0.w).x;
  if (r2.y != 0 && fshadows!=1) {
    r1.xy = saturate(r1.zw);
    r1.xy = cmp(r1.zw == r1.xy);
    r1.x = r1.y ? r1.x : 0;
    if (r1.x == 0) {
      r3.y = 1;
    }
  } else {
    r3.y = 1;
  }
  r1.xyzw = cb1[10].zzzz * float4(-0.00048828125,0.00048828125,0.00048828125,0.00048828125) + r0.yzyz;
  r2.xyzw = saturate(r1.xyzw);
  r2.xyzw = cmp(r1.xyzw == r2.xyzw);
  r0.yz = r2.yw ? r2.xz : 0;
  r1.xyzw = float4(0.5,0.5,0.5,0.5) * r1.xyzw;
  r3.z = t12.SampleCmp(s12_s, r1.xy, r0.w).x;
  if (r0.y != 0 && fshadows!=1) {
    r2.xy = saturate(r1.xy);
    r1.xy = cmp(r1.xy == r2.xy);
    r0.y = r1.y ? r1.x : 0;
    if (r0.y == 0) {
      r3.z = 1;
    }
  } else {
    r3.z = 1;
  }
  r3.w = t12.SampleCmp(s12_s, r1.zw, r0.w).x;
  if (r0.z != 0 && fshadows!=1) {
    r0.yz = saturate(r1.zw);
    r0.yz = cmp(r1.zw == r0.yz);
    r0.y = r0.z ? r0.y : 0;
    if (r0.y == 0) {
      r3.w = 1;
    }
  } else {
    r3.w = 1;
  }
  o1.w = dot(r3.xyzw, float4(0.25,0.25,0.25,0.25));
  r0.x = saturate(-r0.x * -0.015625 + 1);
  o0.z = r0.x * r0.x;
  o0.xyw = float3(1,1,1);
  return;
}

/*~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//   using 3Dmigoto v1.3.11 on Fri Aug 03 19:56:50 2018
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// TEXCOORD                 0   xy          0     NONE   float   xy
// TEXCOORD                 1   xyz         1     NONE   float   xyz
// SV_POSITION              0   xyzw        2      POS   float   xy
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
// SV_Target                1   xyzw        1   TARGET   float   xyzw
//
ps_5_0
dcl_globalFlags refactoringAllowed
dcl_constantbuffer cb1[11], immediateIndexed
dcl_constantbuffer cb2[17], immediateIndexed
dcl_sampler s0, mode_default
dcl_sampler s12, mode_comparison
dcl_sampler s13, mode_comparison
dcl_sampler s14, mode_comparison
dcl_sampler s15, mode_comparison
dcl_resource_texture2d (float,float,float,float) t0
dcl_resource_texture2d (float,float,float,float) t12
dcl_resource_texture2d (float,float,float,float) t13
dcl_resource_texture2d (float,float,float,float) t14
dcl_resource_texture2d (float,float,float,float) t15
dcl_input_ps linear v0.xy
dcl_input_ps linear v1.xyz
dcl_input_ps_siv linear noperspective v2.xy, position
dcl_output o0.xyzw
dcl_output o1.xyzw
dcl_temps 6
sample_indexable(texture2d)(float,float,float,float) r0.x, v0.xyxx, t0.xyzw, s0
add r0.x, r0.x, cb2[0].x
div r0.x, -cb2[0].y, r0.x
mul r1.xyz, -r0.xxxx, v1.xyzx
mov r1.w, l(1.000000)
dp4 r2.x, cb2[5].xyzw, r1.xyzw
dp4 r2.y, cb2[6].xyzw, r1.xyzw
dp4 r2.z, cb2[7].xyzw, r1.xyzw
dp4 r0.y, cb2[8].xyzw, r1.xyzw
div r0.yzw, r2.xxyz, r0.yyyy
mul r2.x, l(0.000976562500), cb1[10].w
mad r3.xyzw, cb1[10].zzzz, l(-0.000488281250, -0.000488281250, 0.000488281250, -0.000488281250), r0.yzyz
mov_sat r4.xyzw, r3.xyzw
eq r4.xyzw, r3.xyzw, r4.xyzw
and r2.yz, r4.yywy, r4.xxzx
min r0.w, r0.w, l(1.000000)
sample_c_indexable(texture2d)(float,float,float,float) r2.w, r3.xyxx, t15.xxxx, s15, r0.w
if_z r2.y
  mov r2.w, l(1.000000)
endif
movc r4.x, r2.y, r2.w, l(1.000000)
sample_c_indexable(texture2d)(float,float,float,float) r2.y, r3.zwzz, t15.xxxx, s15, r0.w
if_z r2.z
  mov r2.y, l(1.000000)
endif
movc r4.y, r2.z, r2.y, l(1.000000)
mad r3.xyzw, cb1[10].zzzz, l(-0.000488281250, 0.000488281250, 0.000488281250, 0.000488281250), r0.yzyz
mov_sat r5.xyzw, r3.xyzw
eq r5.xyzw, r3.xyzw, r5.xyzw
and r0.yz, r5.yywy, r5.xxzx
sample_c_indexable(texture2d)(float,float,float,float) r2.y, r3.xyxx, t15.xxxx, s15, r0.w
if_z r0.y
  mov r2.y, l(1.000000)
endif
movc r4.z, r0.y, r2.y, l(1.000000)
sample_c_indexable(texture2d)(float,float,float,float) r0.y, r3.zwzz, t15.xxxx, s15, r0.w
if_z r0.z
  mov r0.y, l(1.000000)
endif
movc r4.w, r0.z, r0.y, l(1.000000)
dp4 o1.x, r4.xyzw, l(0.250000, 0.250000, 0.250000, 0.250000)
dp4 r3.x, cb2[1].xyzw, r1.xyzw
dp4 r3.y, cb2[2].xyzw, r1.xyzw
dp4 r3.z, cb2[3].xyzw, r1.xyzw
dp4 r0.y, cb2[4].xyzw, r1.xyzw
div r0.yzw, r3.xxyz, r0.yyyy
mad r3.xyzw, cb1[10].wwww, l(-0.000488281250, -0.000488281250, 0.000488281250, -0.000488281250), r0.yzyz
mov_sat r4.xyzw, r3.xyzw
eq r4.xyzw, r3.xyzw, r4.xyzw
and r2.yz, r4.yywy, r4.xxzx
min r0.w, r0.w, l(1.000000)
sample_c_indexable(texture2d)(float,float,float,float) r2.w, r3.xyxx, t14.xxxx, s14, r0.w
if_z r2.y
  mov r2.w, l(1.000000)
endif
movc r4.x, r2.y, r2.w, l(1.000000)
sample_c_indexable(texture2d)(float,float,float,float) r2.y, r3.zwzz, t14.xxxx, s14, r0.w
if_z r2.z
  mov r2.y, l(1.000000)
endif
movc r4.y, r2.z, r2.y, l(1.000000)
mad r3.xyzw, cb1[10].wwww, l(-0.000488281250, 0.000488281250, 0.000488281250, 0.000488281250), r0.yzyz
mov_sat r5.xyzw, r3.xyzw
eq r5.xyzw, r3.xyzw, r5.xyzw
and r0.yz, r5.yywy, r5.xxzx
sample_c_indexable(texture2d)(float,float,float,float) r2.y, r3.xyxx, t14.xxxx, s14, r0.w
if_z r0.y
  mov r2.y, l(1.000000)
endif
movc r4.z, r0.y, r2.y, l(1.000000)
sample_c_indexable(texture2d)(float,float,float,float) r0.y, r3.zwzz, t14.xxxx, s14, r0.w
if_z r0.z
  mov r0.y, l(1.000000)
endif
movc r4.w, r0.z, r0.y, l(1.000000)
dp4 o1.y, r4.xyzw, l(0.250000, 0.250000, 0.250000, 0.250000)
dp4 r3.x, cb2[9].xyzw, r1.xyzw
dp4 r3.y, cb2[10].xyzw, r1.xyzw
dp4 r3.z, cb2[11].xyzw, r1.xyzw
dp4 r0.y, cb2[12].xyzw, r1.xyzw
div r0.yzw, r3.xxyz, r0.yyyy
add r2.yz, v2.xxyx, l(0.000000, -0.500000, -0.500000, 0.000000)
mul r2.yz, r2.yyzy, l(0.000000, 0.500000, 0.500000, 0.000000)
frc r2.yz, r2.yyzy
lt r2.yz, l(0.000000, 0.250000, 0.250000, 0.000000), r2.yyzy
and r3.xy, r2.yzyy, l(0x3f800000, 0x3f800000, 0, 0)
add r2.y, r3.x, r3.y
lt r2.z, l(1.100000), r2.y
movc r3.z, r2.z, l(0), r2.y
add r2.yz, r3.xxzx, l(0.000000, -0.500000, -0.500000, 0.000000)
mad r0.yz, r2.xxxx, r2.yyzy, r0.yyzy
mov_sat r2.xy, r0.yzyy
eq r2.xy, r0.yzyy, r2.xyxx
and r2.x, r2.y, r2.x
min r0.w, r0.w, l(1.000000)
sample_c_indexable(texture2d)(float,float,float,float) o1.z, r0.yzyy, t13.xxxx, s13, r0.w
if_z r2.x
  mov o1.z, l(1.000000)
endif
dp4 r2.x, cb2[13].xyzw, r1.xyzw
dp4 r2.y, cb2[14].xyzw, r1.xyzw
dp4 r2.z, cb2[15].xyzw, r1.xyzw
dp4 r0.y, cb2[16].xyzw, r1.xyzw
div r0.yzw, r2.xxyz, r0.yyyy
mad r1.xyzw, cb1[10].zzzz, l(-0.000488281250, -0.000488281250, 0.000488281250, -0.000488281250), r0.yzyz
mov_sat r2.xyzw, r1.xyzw
eq r2.xyzw, r1.xyzw, r2.xyzw
and r2.xy, r2.ywyy, r2.xzxx
mul r1.xyzw, r1.xyzw, l(0.500000, 0.500000, 0.500000, 0.500000)
min r0.w, r0.w, l(1.000000)
sample_c_indexable(texture2d)(float,float,float,float) r3.x, r1.xyxx, t12.xxxx, s12, r0.w
if_nz r2.x
  mov_sat r2.xz, r1.xxyx
  eq r1.xy, r1.xyxx, r2.xzxx
  and r1.x, r1.y, r1.x
  if_z r1.x
    mov r3.x, l(1.000000)
  endif
else
  mov r3.x, l(1.000000)
endif
sample_c_indexable(texture2d)(float,float,float,float) r3.y, r1.zwzz, t12.xxxx, s12, r0.w
if_nz r2.y
  mov_sat r1.xy, r1.zwzz
  eq r1.xy, r1.zwzz, r1.xyxx
  and r1.x, r1.y, r1.x
  if_z r1.x
    mov r3.y, l(1.000000)
  endif
else
  mov r3.y, l(1.000000)
endif
mad r1.xyzw, cb1[10].zzzz, l(-0.000488281250, 0.000488281250, 0.000488281250, 0.000488281250), r0.yzyz
mov_sat r2.xyzw, r1.xyzw
eq r2.xyzw, r1.xyzw, r2.xyzw
and r0.yz, r2.yywy, r2.xxzx
mul r1.xyzw, r1.xyzw, l(0.500000, 0.500000, 0.500000, 0.500000)
sample_c_indexable(texture2d)(float,float,float,float) r3.z, r1.xyxx, t12.xxxx, s12, r0.w
if_nz r0.y
  mov_sat r2.xy, r1.xyxx
  eq r1.xy, r1.xyxx, r2.xyxx
  and r0.y, r1.y, r1.x
  if_z r0.y
    mov r3.z, l(1.000000)
  endif
else
  mov r3.z, l(1.000000)
endif
sample_c_indexable(texture2d)(float,float,float,float) r3.w, r1.zwzz, t12.xxxx, s12, r0.w
if_nz r0.z
  mov_sat r0.yz, r1.zzwz
  eq r0.yz, r1.zzwz, r0.yyzy
  and r0.y, r0.z, r0.y
  if_z r0.y
    mov r3.w, l(1.000000)
  endif
else
  mov r3.w, l(1.000000)
endif
dp4 o1.w, r3.xyzw, l(0.250000, 0.250000, 0.250000, 0.250000)
mad_sat r0.x, -r0.x, l(-0.015625), l(1.000000)
mul o0.z, r0.x, r0.x
mov o0.xyw, l(1.000000,1.000000,0,1.000000)
ret
// Approximately 0 instruction slots used

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~*/
