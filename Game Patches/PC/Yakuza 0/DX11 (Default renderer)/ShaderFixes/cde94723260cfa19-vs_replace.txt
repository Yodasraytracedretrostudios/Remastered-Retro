//HUD (map).
// ---- Created with 3Dmigoto v1.3.11 on Sat Aug 04 01:07:12 2018
cbuffer cb5 : register(b5)
{
  float4 cb5[2];
}

cbuffer cb6 : register(b6)
{
  float4 cb6[1];
}

cbuffer cb7 : register(b7)
{
  float4 cb7[10];
}

cbuffer cb12 : register(b12)
{
  float4 cb12[31];
}

cbuffer cb10 : register(b10)
{
  float4 cb10[3];
}




// 3Dmigoto declarations
#define cmp -
Texture1D<float4> IniParams : register(t120);
Texture2D<float4> StereoParams : register(t125);


void main(
  float4 v0 : POSITION0,
  float4 v1 : COLOR0,
  float2 v2 : TEXCOORD0,
  out float4 o0 : COLOR0,
  out float2 o1 : TEXCOORD0,
  out float4 o2 : SV_POSITION0)
{
  float4 r0,r1;
  uint4 bitmask, uiDest;
  float4 fDest;

  float4 stereo = StereoParams.Load(0);
  float4 iniparams = IniParams.Load(0);
  float4 iniparams3 = IniParams.Load(int2(3,0));
  
  r0.x = cb5[1].w * cb7[9].w;
  r0.w = cb6[0].w * r0.x;
  r0.xyz = cb6[0].xyz * cb7[9].xyz;
  o0.xyzw = v1.xyzw * r0.xyzw;
  o1.xy = v2.xy;
  r0.xyz = v0.xyz;
  r0.w = 1;
  r1.x = dot(cb10[0].xyzw, r0.xyzw);
  r1.y = dot(cb10[1].xyzw, r0.xyzw);
  r1.z = dot(cb10[2].xyzw, r0.xyzw);
  r0.xyz = -cb12[30].xyz + r1.xyz;
  r1.x = dot(cb12[4].xyz, r0.xyz);
  r1.y = dot(cb12[5].xyz, r0.xyz);
  r1.z = dot(cb12[6].xyz, r0.xyz);
  r1.w = 1;
  o2.x = dot(cb12[0].xyzw, r1.xyzw);
  o2.y = dot(cb12[1].xyzw, r1.xyzw);
  o2.z = dot(cb12[2].xyzw, r1.xyzw);
  o2.w = dot(cb12[3].xyzw, r1.xyzw);
  //if (iniparams3.w==12)
  //{
	//o2.x+=stereo.x*iniparams.x*o2.z*6;
  //}
  o2.x=o2.x*iniparams.y;
  return;
}

/*~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//   using 3Dmigoto v1.3.11 on Sat Aug 04 01:07:12 2018
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyz
// COLOR                    0   xyzw        1     NONE   float   xyzw
// TEXCOORD                 0   xy          2     NONE   float   xy
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// COLOR                    0   xyzw        0     NONE   float   xyzw
// TEXCOORD                 0   xy          1     NONE   float   xy
// SV_POSITION              0   xyzw        2      POS   float   xyzw
//
vs_5_0
dcl_globalFlags refactoringAllowed
dcl_constantbuffer cb10[3], immediateIndexed
dcl_constantbuffer cb12[31], immediateIndexed
dcl_constantbuffer cb7[10], immediateIndexed
dcl_constantbuffer cb6[1], immediateIndexed
dcl_constantbuffer cb5[2], immediateIndexed
dcl_input v0.xyz
dcl_input v1.xyzw
dcl_input v2.xy
dcl_output o0.xyzw
dcl_output o1.xy
dcl_output_siv o2.xyzw, position
dcl_temps 2
mul r0.x, cb7[9].w, cb5[1].w
mul r0.w, r0.x, cb6[0].w
mul r0.xyz, cb7[9].xyzx, cb6[0].xyzx
mul o0.xyzw, r0.xyzw, v1.xyzw
mov o1.xy, v2.xyxx
mov r0.xyz, v0.xyzx
mov r0.w, l(1.000000)
dp4 r1.x, cb10[0].xyzw, r0.xyzw
dp4 r1.y, cb10[1].xyzw, r0.xyzw
dp4 r1.z, cb10[2].xyzw, r0.xyzw
add r0.xyz, r1.xyzx, -cb12[30].xyzx
dp3 r1.x, cb12[4].xyzx, r0.xyzx
dp3 r1.y, cb12[5].xyzx, r0.xyzx
dp3 r1.z, cb12[6].xyzx, r0.xyzx
mov r1.w, l(1.000000)
dp4 o2.x, cb12[0].xyzw, r1.xyzw
dp4 o2.y, cb12[1].xyzw, r1.xyzw
dp4 o2.z, cb12[2].xyzw, r1.xyzw
dp4 o2.w, cb12[3].xyzw, r1.xyzw
ret
// Approximately 0 instruction slots used

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~*/
 