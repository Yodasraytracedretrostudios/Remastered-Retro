//Cutscene shadows or lighting VS.
// ---- Created with 3Dmigoto v1.3.11 on Mon Aug 06 23:30:18 2018
cbuffer cb12 : register(b12)
{
  float4 cb12[31];
}

cbuffer cb10 : register(b10)
{
  float4 cb10[768];
}




// 3Dmigoto declarations
#define cmp -
Texture1D<float4> IniParams : register(t120);
Texture2D<float4> StereoParams : register(t125);


void main(
  float4 v0 : POSITION0,
  float4 v1 : BLENDWEIGHT0,
  uint4 v2 : BLENDINDICES0,
  out float4 o0 : TEXCOORD0,
  out float4 o1 : TEXCOORD1,
  out float2 o2 : TEXCOORD3,
  out float4 o3 : SV_POSITION0)
{
  float4 r0,r1,r2,r3,r4,r5,r6;
  uint4 bitmask, uiDest;
  float4 fDest;

  float4 stereo = StereoParams.Load(0);
  
  r0.x = dot(v1.yzw, float3(1,1,1));
  r0.x = 1 + -r0.x;
  r1.xyz = float3(0,0,0);
  r2.xyzw = (int4)v2.xyzw * int4(3,3,3,3);
  r1.w = floor(cb10[r2.x+2].w);
  r3.xyzw = cb10[r2.y+2].xyzw + -r1.zzzw;
  r3.xyzw = v1.yyyy * r3.xyzw;
  r4.xyzw = cb10[r2.x+2].xyzw + -r1.zzzw;
  r3.xyzw = r4.xyzw * r0.xxxx + r3.xyzw;
  r4.xyzw = cb10[r2.z+2].xyzw + -r1.zzzw;
  r3.xyzw = r4.xyzw * v1.zzzz + r3.xyzw;
  r4.xyzw = cb10[r2.w+2].xyzw + -r1.zzzw;
  r3.xyzw = r4.xyzw * v1.wwww + r3.xyzw;
  r1.xyzw = r3.xyzw + r1.xyzw;
  r3.xyz = v0.xyz;
  r3.w = 1;
  //r3.x-=stereo.x*0.5;
  r1.z = dot(r1.xyzw, r3.xyzw);
  r4.y = floor(cb10[r2.x+0].w);
  r4.xz = float2(0,0);
  r5.xyzw = cb10[r2.y+0].xyzw + -r4.xxxy;
  r5.xyzw = v1.yyyy * r5.xyzw;
  r6.xyzw = cb10[r2.x+0].xyzw + -r4.xxxy;
  r5.xyzw = r6.xyzw * r0.xxxx + r5.xyzw;
  r6.xyzw = cb10[r2.z+0].xyzw + -r4.xxxy;
  r5.xyzw = r6.xyzw * v1.zzzz + r5.xyzw;
  r6.xyzw = cb10[r2.w+0].xyzw + -r4.xxxy;
  r5.xyzw = r6.xyzw * v1.wwww + r5.xyzw;
  r5.xyzw = r5.xyzw + r4.zzzy;
  r1.x = dot(r5.xyzw, r3.xyzw);
  r4.w = floor(cb10[r2.x+1].w);
  r5.xyzw = cb10[r2.y+1].xyzw + -r4.zzzw;
  r5.xyzw = v1.yyyy * r5.xyzw;
  r6.xyzw = cb10[r2.x+1].xyzw + -r4.zzzw;
  r0.xyzw = r6.xyzw * r0.xxxx + r5.xyzw;
  r5.xyzw = cb10[r2.z+1].xyzw + -r4.zzzw;
  r2.xyzw = cb10[r2.w+1].xyzw + -r4.zzzw;
  r0.xyzw = r5.xyzw * v1.zzzz + r0.xyzw;
  r0.xyzw = r2.xyzw * v1.wwww + r0.xyzw;
  r0.xyzw = r0.xyzw + r4.zzzw;
  r1.y = dot(r0.xyzw, r3.xyzw);
  r1.w = 1;
  o0.x = dot(cb12[24].xyzw, r1.xyzw);
  o0.y = dot(cb12[25].xyzw, r1.xyzw);
  o0.z = dot(cb12[26].xyzw, r1.xyzw);
  o0.w = dot(cb12[27].xyzw, r1.xyzw);
  o1.x = dot(cb12[20].xyzw, r1.xyzw);
  o1.y = dot(cb12[21].xyzw, r1.xyzw);
  o1.z = dot(cb12[22].xyzw, r1.xyzw);
  o1.w = dot(cb12[23].xyzw, r1.xyzw);
  r0.xyz = -cb12[30].xyz + r1.xyz;
  r1.x = dot(cb12[4].xyz, r0.xyz);
  r1.y = dot(cb12[5].xyz, r0.xyz);
  r1.z = dot(cb12[6].xyz, r0.xyz);
  r1.w = 1;
  r0.x = dot(cb12[3].xyzw, r1.xyzw);
  o2.x = -r0.x * 0.015625 + 1;
  o3.w = r0.x;
  o2.y = 1;
  
  o3.x = dot(cb12[0].xyzw, r1.xyzw);
  o3.y = dot(cb12[1].xyzw, r1.xyzw);
  o3.z = dot(cb12[2].xyzw, r1.xyzw);
  return;
}

/*~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//   using 3Dmigoto v1.3.11 on Mon Aug 06 23:30:18 2018
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyz
// BLENDWEIGHT              0   xyzw        1     NONE   float    yzw
// BLENDINDICES             0   xyzw        2     NONE    uint   xyzw
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// TEXCOORD                 0   xyzw        0     NONE   float   xyzw
// TEXCOORD                 1   xyzw        1     NONE   float   xyzw
// TEXCOORD                 3   xy          2     NONE   float   xy
// SV_POSITION              0   xyzw        3      POS   float   xyzw
//
vs_5_0
dcl_globalFlags refactoringAllowed
dcl_constantbuffer cb10[768], dynamicIndexed
dcl_constantbuffer cb12[31], immediateIndexed
dcl_input v0.xyz
dcl_input v1.yzw
dcl_input v2.xyzw
dcl_output o0.xyzw
dcl_output o1.xyzw
dcl_output o2.xy
dcl_output_siv o3.xyzw, position
dcl_temps 7
dp3 r0.x, v1.yzwy, l(1.000000, 1.000000, 1.000000, 0.000000)
add r0.x, -r0.x, l(1.000000)
mov r1.xyz, l(0,0,0,0)
imul null, r2.xyzw, v2.xyzw, l(3, 3, 3, 3)
round_ni r1.w, cb10[r2.x + 2].w
add r3.xyzw, -r1.zzzw, cb10[r2.y + 2].xyzw
mul r3.xyzw, r3.xyzw, v1.yyyy
add r4.xyzw, -r1.zzzw, cb10[r2.x + 2].xyzw
mad r3.xyzw, r4.xyzw, r0.xxxx, r3.xyzw
add r4.xyzw, -r1.zzzw, cb10[r2.z + 2].xyzw
mad r3.xyzw, r4.xyzw, v1.zzzz, r3.xyzw
add r4.xyzw, -r1.zzzw, cb10[r2.w + 2].xyzw
mad r3.xyzw, r4.xyzw, v1.wwww, r3.xyzw
add r1.xyzw, r1.xyzw, r3.xyzw
mov r3.xyz, v0.xyzx
mov r3.w, l(1.000000)
dp4 r1.z, r1.xyzw, r3.xyzw
round_ni r4.y, cb10[r2.x + 0].w
mov r4.xz, l(0,0,0,0)
add r5.xyzw, -r4.xxxy, cb10[r2.y + 0].xyzw
mul r5.xyzw, r5.xyzw, v1.yyyy
add r6.xyzw, -r4.xxxy, cb10[r2.x + 0].xyzw
mad r5.xyzw, r6.xyzw, r0.xxxx, r5.xyzw
add r6.xyzw, -r4.xxxy, cb10[r2.z + 0].xyzw
mad r5.xyzw, r6.xyzw, v1.zzzz, r5.xyzw
add r6.xyzw, -r4.xxxy, cb10[r2.w + 0].xyzw
mad r5.xyzw, r6.xyzw, v1.wwww, r5.xyzw
add r5.xyzw, r4.zzzy, r5.xyzw
dp4 r1.x, r5.xyzw, r3.xyzw
round_ni r4.w, cb10[r2.x + 1].w
add r5.xyzw, -r4.zzzw, cb10[r2.y + 1].xyzw
mul r5.xyzw, r5.xyzw, v1.yyyy
add r6.xyzw, -r4.zzzw, cb10[r2.x + 1].xyzw
mad r0.xyzw, r6.xyzw, r0.xxxx, r5.xyzw
add r5.xyzw, -r4.zzzw, cb10[r2.z + 1].xyzw
add r2.xyzw, -r4.zzzw, cb10[r2.w + 1].xyzw
mad r0.xyzw, r5.xyzw, v1.zzzz, r0.xyzw
mad r0.xyzw, r2.xyzw, v1.wwww, r0.xyzw
add r0.xyzw, r4.zzzw, r0.xyzw
dp4 r1.y, r0.xyzw, r3.xyzw
mov r1.w, l(1.000000)
dp4 o0.x, cb12[24].xyzw, r1.xyzw
dp4 o0.y, cb12[25].xyzw, r1.xyzw
dp4 o0.z, cb12[26].xyzw, r1.xyzw
dp4 o0.w, cb12[27].xyzw, r1.xyzw
dp4 o1.x, cb12[20].xyzw, r1.xyzw
dp4 o1.y, cb12[21].xyzw, r1.xyzw
dp4 o1.z, cb12[22].xyzw, r1.xyzw
dp4 o1.w, cb12[23].xyzw, r1.xyzw
add r0.xyz, r1.xyzx, -cb12[30].xyzx
dp3 r1.x, cb12[4].xyzx, r0.xyzx
dp3 r1.y, cb12[5].xyzx, r0.xyzx
dp3 r1.z, cb12[6].xyzx, r0.xyzx
mov r1.w, l(1.000000)
dp4 r0.x, cb12[3].xyzw, r1.xyzw
mad o2.x, -r0.x, l(0.015625), l(1.000000)
mov o3.w, r0.x
mov o2.y, l(1.000000)
dp4 o3.x, cb12[0].xyzw, r1.xyzw
dp4 o3.y, cb12[1].xyzw, r1.xyzw
dp4 o3.z, cb12[2].xyzw, r1.xyzw
ret
// Approximately 0 instruction slots used

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~*/
