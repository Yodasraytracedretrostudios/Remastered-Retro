//Sea water reflection?
// ---- Created with 3Dmigoto v1.3.11 on Sun Aug 05 16:37:45 2018
Texture2D<float4> t0 : register(t0);

SamplerState s0_s : register(s0);

cbuffer cb9 : register(b9)
{
  float4 cb9[3];
}




// 3Dmigoto declarations
#define cmp -
Texture1D<float4> IniParams : register(t120);
Texture2D<float4> StereoParams : register(t125);


void main(
  float4 v0 : TEXCOORD0,
  float4 v1 : TEXCOORD1,
  float4 v2 : TEXCOORD2,
  float4 v3 : TEXCOORD3,
  float3 v4 : TEXCOORD4,
  out float4 o0 : SV_Target0)
{
  float4 r0,r1,r2;
  uint4 bitmask, uiDest;
  float4 fDest;

  r0.xyzw = float4(-0.00390625,0,0.00390625,0) + v0.xyxy;
  r0.xy = t0.Sample(s0_s, r0.xy).xy;
  r0.zw = t0.Sample(s0_s, r0.zw).xy;
  r0.z = dot(r0.zw, cb9[2].xy);
  r0.x = dot(r0.xy, cb9[2].xy);
  r0.y = dot(cb9[0].xyz, v1.xyz);
  r0.w = dot(cb9[1].xyz, cb9[0].xyz);
  r0.w = cb9[0].w + r0.w;
  r0.y = r0.w / r0.y;
  r1.xyz = -v1.zxy * r0.yyy + cb9[1].zxy;
  r1.xyz = cb9[0].zxy * r0.xxx + r1.xyz;
  r0.x = dot(cb9[0].xyz, v2.xyz);
  r0.x = r0.w / r0.x;
  r2.xyz = -v2.zxy * r0.xxx + cb9[1].zxy;
  r0.xyz = cb9[0].zxy * r0.zzz + r2.xyz;
  r0.xyz = r0.xyz + -r1.xyz;
  r1.x = dot(cb9[0].xyz, v3.xyz);
  r1.x = r0.w / r1.x;
  r1.xyz = -v3.yzx * r1.xxx + cb9[1].yzx;
  r2.xyzw = float4(0,0.00390625,0,-0.00390625) + v0.xyxy;
  r2.xy = t0.Sample(s0_s, r2.xy).xy;
  r2.zw = t0.Sample(s0_s, r2.zw).xy;
  r1.w = dot(r2.zw, cb9[2].xy);
  r2.x = dot(r2.xy, cb9[2].xy);
  r1.xyz = cb9[0].yzx * r2.xxx + r1.xyz;
  r2.x = dot(cb9[0].xyz, v4.xyz);
  r0.w = r0.w / r2.x;
  r2.xyz = -v4.yzx * r0.www + cb9[1].yzx;
  r2.xyz = cb9[0].yzx * r1.www + r2.xyz;
  r1.xyz = r2.xyz + -r1.xyz;
  r2.xyz = r1.xyz * r0.xyz;
  r0.xyz = r0.zxy * r1.yzx + -r2.xyz;
  r0.w = dot(r0.xyz, r0.xyz);
  r0.w = rsqrt(r0.w);
  r0.xyz = r0.xyz * r0.www + float3(1,1,1);
  o0.xyz = float3(0.5,0.5,0.5) * r0.xyz;
  o0.w = 1;
  return;
}

/*~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//   using 3Dmigoto v1.3.11 on Sun Aug 05 16:37:45 2018
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// TEXCOORD                 0   xy          0     NONE   float   xy
// TEXCOORD                 1   xyz         1     NONE   float   xyz
// TEXCOORD                 2   xyz         2     NONE   float   xyz
// TEXCOORD                 3   xyz         3     NONE   float   xyz
// TEXCOORD                 4   xyz         4     NONE   float   xyz
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
ps_5_0
dcl_globalFlags refactoringAllowed
dcl_constantbuffer cb9[3], immediateIndexed
dcl_sampler s0, mode_default
dcl_resource_texture2d (float,float,float,float) t0
dcl_input_ps linear v0.xy
dcl_input_ps linear v1.xyz
dcl_input_ps linear v2.xyz
dcl_input_ps linear v3.xyz
dcl_input_ps linear v4.xyz
dcl_output o0.xyzw
dcl_temps 3
add r0.xyzw, v0.xyxy, l(-0.00390625000, 0.000000, 0.00390625000, 0.000000)
sample_indexable(texture2d)(float,float,float,float) r0.xy, r0.xyxx, t0.xyzw, s0
sample_indexable(texture2d)(float,float,float,float) r0.zw, r0.zwzz, t0.zwxy, s0
dp2 r0.z, r0.zwzz, cb9[2].xyxx
dp2 r0.x, r0.xyxx, cb9[2].xyxx
dp3 r0.y, cb9[0].xyzx, v1.xyzx
dp3 r0.w, cb9[1].xyzx, cb9[0].xyzx
add r0.w, r0.w, cb9[0].w
div r0.y, r0.w, r0.y
mad r1.xyz, -v1.zxyz, r0.yyyy, cb9[1].zxyz
mad r1.xyz, cb9[0].zxyz, r0.xxxx, r1.xyzx
dp3 r0.x, cb9[0].xyzx, v2.xyzx
div r0.x, r0.w, r0.x
mad r2.xyz, -v2.zxyz, r0.xxxx, cb9[1].zxyz
mad r0.xyz, cb9[0].zxyz, r0.zzzz, r2.xyzx
add r0.xyz, -r1.xyzx, r0.xyzx
dp3 r1.x, cb9[0].xyzx, v3.xyzx
div r1.x, r0.w, r1.x
mad r1.xyz, -v3.yzxy, r1.xxxx, cb9[1].yzxy
add r2.xyzw, v0.xyxy, l(0.000000, 0.00390625000, 0.000000, -0.00390625000)
sample_indexable(texture2d)(float,float,float,float) r2.xy, r2.xyxx, t0.xyzw, s0
sample_indexable(texture2d)(float,float,float,float) r2.zw, r2.zwzz, t0.zwxy, s0
dp2 r1.w, r2.zwzz, cb9[2].xyxx
dp2 r2.x, r2.xyxx, cb9[2].xyxx
mad r1.xyz, cb9[0].yzxy, r2.xxxx, r1.xyzx
dp3 r2.x, cb9[0].xyzx, v4.xyzx
div r0.w, r0.w, r2.x
mad r2.xyz, -v4.yzxy, r0.wwww, cb9[1].yzxy
mad r2.xyz, cb9[0].yzxy, r1.wwww, r2.xyzx
add r1.xyz, -r1.xyzx, r2.xyzx
mul r2.xyz, r0.xyzx, r1.xyzx
mad r0.xyz, r0.zxyz, r1.yzxy, -r2.xyzx
dp3 r0.w, r0.xyzx, r0.xyzx
rsq r0.w, r0.w
mad r0.xyz, r0.xyzx, r0.wwww, l(1.000000, 1.000000, 1.000000, 0.000000)
mul o0.xyz, r0.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000)
mov o0.w, l(1.000000)
ret
// Approximately 0 instruction slots used

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~*/
