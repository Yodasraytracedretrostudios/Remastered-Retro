//Darts bar floor reflection.
// ---- Created with 3Dmigoto v1.3.11 on Sun Aug 05 11:18:49 2018
Texture2D<float4> t10 : register(t10);

Texture2D<float4> t5 : register(t5);

Texture2D<float4> t3 : register(t3);

Texture2D<float4> t0 : register(t0);

SamplerState s10_s : register(s10);

SamplerState s5_s : register(s5);

SamplerState s3_s : register(s3);

SamplerState s0_s : register(s0);

cbuffer cb1 : register(b1)
{
  float4 cb1[4];
}

cbuffer cb5 : register(b5)
{
  float4 cb5[2];
}

cbuffer cb6 : register(b6)
{
  float4 cb6[2];
}

cbuffer cb7 : register(b7)
{
  float4 cb7[11];
}

cbuffer cb13 : register(b13)
{
  float4 cb13[1];
}




// 3Dmigoto declarations
#define cmp -
Texture1D<float4> IniParams : register(t120);
Texture2D<float4> StereoParams : register(t125);


void main(
  float4 v0 : TEXCOORD0,
  float4 v1 : TEXCOORD1,
  float4 v2 : TEXCOORD2,
  float4 v3 : TEXCOORD3,
  float4 v4 : TEXCOORD4,
  float4 v5 : TEXCOORD5,
  float4 v6 : TEXCOORD6,
  float4 v7 : TEXCOORD7,
  float4 v8 : SV_POSITION0,
  out float4 o0 : SV_Target0)
{
  float4 r0,r1,r2,r3;
  uint4 bitmask, uiDest;
  float4 fDest;

  float4 stereo = StereoParams.Load(0);
  
  r0.xyz = v2.yzx * v1.zxy;
  r0.xyz = v1.yzx * v2.zxy + -r0.xyz;
  r0.xyz = v2.www * r0.xyz;
  r1.xyzw = cb7[4].zwxy * v0.xyxy;
  r1.xy = t5.Sample(s5_s, r1.xy).xy;
  r2.xyz = t3.Sample(s3_s, r1.zw).xyz;
  r1.xy = r1.xy * float2(2,2) + float2(-1,-1);
  r3.xyz = v2.xyz * r1.xxx;
  r0.xyz = r1.yyy * r0.xyz + r3.xyz;
  r0.w = dot(r1.xy, r1.xy);
  r0.w = 1 + -r0.w;
  r0.w = max(0, r0.w);
  r0.w = sqrt(r0.w);
  r0.xyz = r0.www * v1.xyz + r0.xyz;
  r0.w = dot(r0.xyz, r0.xyz);
  r0.w = rsqrt(r0.w);
  r0.xyz = r0.xyz * r0.www;
  r0.w = dot(v5.xyz, r0.xyz);
  r0.w = r0.z * r0.w;
  r0.w = -2 * r0.w;
  r1.xy = v5.xy * v5.zz;
  r1.xy = r0.xy * r0.zz + r1.xy;
  r1.xy = r0.ww * v5.xy + r1.xy;
  r0.w = -2 * v7.x;
  r0.w = r0.w / v3.z;
  v4.x+=stereo.x*(v4.z-stereo.y)*0.5;
  r1.zw = v4.xy / v4.zz;
  r1.xy = r0.ww * r1.xy + r1.zw;
  r1.xyz = t10.Sample(s10_s, r1.xy).xyz;
  r3.xyz = cb6[1].xyz * cb7[10].xyz;
  r2.xyz = r3.xyz * r2.xyz;
  r1.xyz = r2.xyz * r1.xyz;
  r0.w = dot(v3.xyz, v3.xyz);
  r0.w = rsqrt(r0.w);
  r2.xyz = v3.xyz * r0.www;
  r0.x = dot(r2.xyz, r0.xyz);
  r0.x = 1 + -abs(r0.x);
  r0.x = log2(r0.x);
  r0.x = v6.w * r0.x;
  r0.x = exp2(r0.x);
  r0.y = v6.z + -v6.x;
  r0.x = r0.x * r0.y + v6.x;
  r0.xyz = r1.xyz * r0.xxx;
  r1.x = cb5[1].w * cb7[9].w;
  r1.x = cb6[0].w * r1.x;
  r1.y = t0.Sample(s0_s, v0.xy).w;
  r0.w = r1.x * r1.y;
  r1.xyzw = cb1[3].xyzw * r0.xyzw;
  r2.x = 8 & asint(cb13[0].x);
  o0.xyzw = r2.xxxx ? r0.xyzw : r1.xyzw;
  return;
}

/*~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//   using 3Dmigoto v1.3.11 on Sun Aug 05 11:18:49 2018
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// TEXCOORD                 0   xy          0     NONE   float   xy
// TEXCOORD                 1   xyz         1     NONE   float   xyz
// TEXCOORD                 2   xyzw        2     NONE   float   xyzw
// TEXCOORD                 3   xyz         3     NONE   float   xyz
// TEXCOORD                 4   xyz         4     NONE   float   xyz
// TEXCOORD                 5   xyz         5     NONE   float   xyz
// TEXCOORD                 6   xyzw        6     NONE   float   x zw
// TEXCOORD                 7   xyzw        7     NONE   float   x
// SV_POSITION              0   xyzw        8      POS   float
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
ps_5_0
dcl_globalFlags refactoringAllowed
dcl_constantbuffer cb13[1], immediateIndexed
dcl_constantbuffer cb7[11], immediateIndexed
dcl_constantbuffer cb6[2], immediateIndexed
dcl_constantbuffer cb5[2], immediateIndexed
dcl_constantbuffer cb1[4], immediateIndexed
dcl_sampler s0, mode_default
dcl_sampler s3, mode_default
dcl_sampler s5, mode_default
dcl_sampler s10, mode_default
dcl_resource_texture2d (float,float,float,float) t0
dcl_resource_texture2d (float,float,float,float) t3
dcl_resource_texture2d (float,float,float,float) t5
dcl_resource_texture2d (float,float,float,float) t10
dcl_input_ps linear v0.xy
dcl_input_ps linear v1.xyz
dcl_input_ps linear v2.xyzw
dcl_input_ps linear v3.xyz
dcl_input_ps linear v4.xyz
dcl_input_ps linear v5.xyz
dcl_input_ps linear v6.xzw
dcl_input_ps linear v7.x
dcl_output o0.xyzw
dcl_temps 4
mul r0.xyz, v1.zxyz, v2.yzxy
mad r0.xyz, v1.yzxy, v2.zxyz, -r0.xyzx
mul r0.xyz, r0.xyzx, v2.wwww
mul r1.xyzw, v0.xyxy, cb7[4].zwxy
sample_indexable(texture2d)(float,float,float,float) r1.xy, r1.xyxx, t5.xyzw, s5
sample_indexable(texture2d)(float,float,float,float) r2.xyz, r1.zwzz, t3.xyzw, s3
mad r1.xy, r1.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
mul r3.xyz, r1.xxxx, v2.xyzx
mad r0.xyz, r1.yyyy, r0.xyzx, r3.xyzx
dp2 r0.w, r1.xyxx, r1.xyxx
add r0.w, -r0.w, l(1.000000)
max r0.w, r0.w, l(0.000000)
sqrt r0.w, r0.w
mad r0.xyz, r0.wwww, v1.xyzx, r0.xyzx
dp3 r0.w, r0.xyzx, r0.xyzx
rsq r0.w, r0.w
mul r0.xyz, r0.wwww, r0.xyzx
dp3 r0.w, v5.xyzx, r0.xyzx
mul r0.w, r0.w, r0.z
mul r0.w, r0.w, l(-2.000000)
mul r1.xy, v5.zzzz, v5.xyxx
mad r1.xy, r0.xyxx, r0.zzzz, r1.xyxx
mad r1.xy, r0.wwww, v5.xyxx, r1.xyxx
mul r0.w, v7.x, l(-2.000000)
div r0.w, r0.w, v3.z
div r1.zw, v4.xxxy, v4.zzzz
mad r1.xy, r0.wwww, r1.xyxx, r1.zwzz
sample_indexable(texture2d)(float,float,float,float) r1.xyz, r1.xyxx, t10.xyzw, s10
mul r3.xyz, cb7[10].xyzx, cb6[1].xyzx
mul r2.xyz, r2.xyzx, r3.xyzx
mul r1.xyz, r1.xyzx, r2.xyzx
dp3 r0.w, v3.xyzx, v3.xyzx
rsq r0.w, r0.w
mul r2.xyz, r0.wwww, v3.xyzx
dp3 r0.x, r2.xyzx, r0.xyzx
add r0.x, -|r0.x|, l(1.000000)
log r0.x, r0.x
mul r0.x, r0.x, v6.w
exp r0.x, r0.x
add r0.y, -v6.x, v6.z
mad r0.x, r0.x, r0.y, v6.x
mul r0.xyz, r0.xxxx, r1.xyzx
mul r1.x, cb7[9].w, cb5[1].w
mul r1.x, r1.x, cb6[0].w
sample_indexable(texture2d)(float,float,float,float) r1.y, v0.xyxx, t0.xwyz, s0
mul r0.w, r1.y, r1.x
mul r1.xyzw, r0.xyzw, cb1[3].xyzw
and r2.x, l(8), cb13[0].x
movc o0.xyzw, r2.xxxx, r0.xyzw, r1.xyzw
ret
// Approximately 0 instruction slots used

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~*/
