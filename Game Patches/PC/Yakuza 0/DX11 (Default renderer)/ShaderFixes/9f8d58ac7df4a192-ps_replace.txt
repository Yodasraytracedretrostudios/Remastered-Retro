//Water reflection when fishing.
// ---- Created with 3Dmigoto v1.3.11 on Sun Aug 05 16:39:22 2018
Texture2D<float4> t3 : register(t3);

Texture2D<float4> t2 : register(t2);

Texture2D<float4> t1 : register(t1);

Texture2D<float4> t0 : register(t0);

SamplerState s3_s : register(s3);

SamplerState s2_s : register(s2);

SamplerState s1_s : register(s1);

SamplerState s0_s : register(s0);

cbuffer cb9 : register(b9)
{
  float4 cb9[1];
}

cbuffer cb12 : register(b12)
{
  float4 cb12[30];
}




// 3Dmigoto declarations
#define cmp -
Texture1D<float4> IniParams : register(t120);
Texture2D<float4> StereoParams : register(t125);


void main(
  float4 v0 : TEXCOORD0,
  float4 v1 : TEXCOORD1,
  float4 v2 : TEXCOORD2,
  float4 v3 : SV_POSITION0,
  out float4 o0 : SV_Target0)
{
  float4 r0,r1;
  uint4 bitmask, uiDest;
  float4 fDest;

  float4 stereo = StereoParams.Load(0);
  
  r0.xyzw = t0.Sample(s0_s, v1.xy).xyzw;
  r1.x = r0.w * v0.w + -0.00392156886;
  r0.xyzw = v0.xyzw * r0.xyzw;
  r1.x = cmp(r1.x < 0);
  if (r1.x != 0) discard;
  r1.xyz = t1.Sample(s1_s, v1.zw).xyw;
  r1.xy = r1.xy * float2(2,2) + float2(-1,-1);
  v2.x+=stereo.x*(v2.w-stereo.y)*0.5;
  r1.xy = -r1.xy * cb9[0].xx + v2.xy;
  r1.xy = r1.xy / v2.ww;
  r1.xyw = t2.Sample(s2_s, r1.xy).xyz;
  r1.xyz = r1.xyw * r1.zzz;
  r0.xyz = r1.xyz * r0.xyz;
  o0.w = r0.w;
  r1.xy = float2(-0.5,-0.5) + v3.xy;
  r1.zw = cb12[29].zw * float2(0.5,0.5);
  r1.xy = r1.xy * cb12[29].zw + r1.zw;
  r1.xy = t3.Sample(s3_s, r1.xy).xy;
  r0.w = r1.x * r1.y;
  r1.x = -r1.x * r1.y + 1;
  r0.w = r1.x * cb9[0].w + r0.w;
  o0.xyz = r0.xyz * r0.www;
  return;
}

/*~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//   using 3Dmigoto v1.3.11 on Sun Aug 05 16:39:22 2018
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// TEXCOORD                 0   xyzw        0     NONE   float   xyzw
// TEXCOORD                 1   xyzw        1     NONE   float   xyzw
// TEXCOORD                 2   xyzw        2     NONE   float   xy w
// SV_POSITION              0   xyzw        3      POS   float   xy
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
ps_5_0
dcl_globalFlags refactoringAllowed
dcl_constantbuffer cb12[30], immediateIndexed
dcl_constantbuffer cb9[1], immediateIndexed
dcl_sampler s0, mode_default
dcl_sampler s1, mode_default
dcl_sampler s2, mode_default
dcl_sampler s3, mode_default
dcl_resource_texture2d (float,float,float,float) t0
dcl_resource_texture2d (float,float,float,float) t1
dcl_resource_texture2d (float,float,float,float) t2
dcl_resource_texture2d (float,float,float,float) t3
dcl_input_ps linear v0.xyzw
dcl_input_ps linear v1.xyzw
dcl_input_ps linear v2.xyw
dcl_input_ps_siv linear noperspective v3.xy, position
dcl_output o0.xyzw
dcl_temps 2
sample_indexable(texture2d)(float,float,float,float) r0.xyzw, v1.xyxx, t0.xyzw, s0
mad r1.x, r0.w, v0.w, l(-0.00392156886)
mul r0.xyzw, r0.xyzw, v0.xyzw
lt r1.x, r1.x, l(0.000000)
discard_nz r1.x
sample_indexable(texture2d)(float,float,float,float) r1.xyz, v1.zwzz, t1.xywz, s1
mad r1.xy, r1.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
mad r1.xy, -r1.xyxx, cb9[0].xxxx, v2.xyxx
div r1.xy, r1.xyxx, v2.wwww
sample_indexable(texture2d)(float,float,float,float) r1.xyw, r1.xyxx, t2.xywz, s2
mul r1.xyz, r1.zzzz, r1.xywx
mul r0.xyz, r0.xyzx, r1.xyzx
mov o0.w, r0.w
add r1.xy, v3.xyxx, l(-0.500000, -0.500000, 0.000000, 0.000000)
mul r1.zw, l(0.000000, 0.000000, 0.500000, 0.500000), cb12[29].zzzw
mad r1.xy, r1.xyxx, cb12[29].zwzz, r1.zwzz
sample_indexable(texture2d)(float,float,float,float) r1.xy, r1.xyxx, t3.xyzw, s3
mul r0.w, r1.y, r1.x
mad r1.x, -r1.x, r1.y, l(1.000000)
mad r0.w, r1.x, cb9[0].w, r0.w
mul o0.xyz, r0.wwww, r0.xyzx
ret
// Approximately 0 instruction slots used

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~*/
