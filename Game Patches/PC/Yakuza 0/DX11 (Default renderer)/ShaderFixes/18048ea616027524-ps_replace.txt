//Lighting in last chapter 3 cutscene.
// ---- Created with 3Dmigoto v1.3.11 on Tue Aug 07 22:08:36 2018



// 3Dmigoto declarations
#define cmp -
Texture1D<float4> IniParams : register(t120);
Texture2D<float4> StereoParams : register(t125);


void main(
  float4 v0 : COLOR0,
  float4 v1 : SV_POSITION0,
  out float4 o0 : SV_Target0)
{
  float4 r0,r1,r2;
  uint4 bitmask, uiDest;
  float4 fDest;

  float4 stereo = StereoParams.Load(0);
  
  //v1.x+=stereo.x;
  
  r0.xy = float2(-0.5,-0.5) + v1.xy;
  r0.xy = float2(0.25,0.25) * r0.xy;
  r0.xy = frac(r0.xy);
  r0.xy = float2(4,4) * r0.xy;
  r0.xy = (int2)r0.xy;
  r1.xyzw = cmp((int4)r0.yyyy == int4(0,1,2,3));
  r0.xyzw = cmp((int4)r0.xxxx == int4(0,1,2,3));
  r1.xyzw = r1.xyzw ? float4(1,1,1,1) : 0;
  r2.xyz = r0.yzw ? float3(1,1,1) : 0;
  r0.xyzw = r0.xyzw ? float4(1,1,1,1) : 0;
  r2.x = dot(r2.xyz, float3(0.00196078443,0.000490196107,0.00245098048));
  r2.y = dot(r0.xyzw, float4(0.00294117653,0.000980392215,0.00343137258,0.00147058826));
  r2.z = dot(r0.xyzw, float4(0.000735294132,0.0026960785,0.000245098054,0.00220588245));
  r2.w = dot(r0.xyzw, float4(0.0036764706,0.00171568629,0.00318627455,0.00122549024));
  r0.x = dot(r2.xyzw, r1.xyzw);
  o0.w = v0.w + r0.x;
  o0.xyz = v0.xyz;
  return;
}

/*~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//   using 3Dmigoto v1.3.11 on Tue Aug 07 22:08:36 2018
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// COLOR                    0   xyzw        0     NONE   float   xyzw
// SV_POSITION              0   xyzw        1      POS   float   xy
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
ps_5_0
dcl_globalFlags refactoringAllowed
dcl_input_ps linear v0.xyzw
dcl_input_ps_siv linear noperspective v1.xy, position
dcl_output o0.xyzw
dcl_temps 3
add r0.xy, v1.xyxx, l(-0.500000, -0.500000, 0.000000, 0.000000)
mul r0.xy, r0.xyxx, l(0.250000, 0.250000, 0.000000, 0.000000)
frc r0.xy, r0.xyxx
mul r0.xy, r0.xyxx, l(4.000000, 4.000000, 0.000000, 0.000000)
ftoi r0.xy, r0.xyxx
ieq r1.xyzw, r0.yyyy, l(0, 1, 2, 3)
ieq r0.xyzw, r0.xxxx, l(0, 1, 2, 3)
and r1.xyzw, r1.xyzw, l(0x3f800000, 0x3f800000, 0x3f800000, 0x3f800000)
and r2.xyz, r0.yzwy, l(0x3f800000, 0x3f800000, 0x3f800000, 0)
and r0.xyzw, r0.xyzw, l(0x3f800000, 0x3f800000, 0x3f800000, 0x3f800000)
dp3 r2.x, r2.xyzx, l(0.00196078443, 0.000490196107, 0.00245098048, 0.000000)
dp4 r2.y, r0.xyzw, l(0.00294117653, 0.000980392215, 0.00343137258, 0.00147058826)
dp4 r2.z, r0.xyzw, l(0.000735294132, 0.00269607850, 0.000245098054, 0.00220588245)
dp4 r2.w, r0.xyzw, l(0.00367647060, 0.00171568629, 0.00318627455, 0.00122549024)
dp4 r0.x, r2.xyzw, r1.xyzw
add o0.w, r0.x, v0.w
mov o0.xyz, v0.xyzx
ret
// Approximately 0 instruction slots used

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~*/
