//Blood haloing VS.
// ---- Created with 3Dmigoto v1.3.16 on Sat Jan 30 11:23:13 2021
cbuffer cb6 : register(b6)
{
  float4 cb6[51];
}

cbuffer cb4 : register(b4)
{
  float4 cb4[24];
}

cbuffer cb1 : register(b1)
{
  float4 cb1[13];
}




// 3Dmigoto declarations
#define cmp -
Texture1D<float4> IniParams : register(t120);
Texture2D<float4> StereoParams : register(t125);


void main(
  float4 v0 : POSITION0,
  float3 v1 : NORMAL0,
  float3 v2 : TANGENT0,
  float4 v3 : COLOR0,
  float2 v4 : TEXCOORD0,
  out float4 o0 : COLOR0,
  out float2 o1 : TEXCOORD0,
  out float4 o2 : SV_POSITION0,
  out float4 o3 : TEXCOORD1,
  out float4 o4 : TEXCOORD2,
  out float4 o5 : TEXCOORD3)
{
  float4 r0,r1;
  uint4 bitmask, uiDest;
  float4 fDest;
  
  float4 stereo = StereoParams.Load(0);
  
  o0.xyzw = v3.xyzw;
  o1.xy = v4.xy;
  r0.x = dot(cb4[20].xyzw, v0.xyzw);
  r0.y = dot(cb4[21].xyzw, v0.xyzw);
  r0.z = dot(cb4[22].xyzw, v0.xyzw);
  r0.w = dot(cb4[23].xyzw, v0.xyzw);
  o2.xyzw = r0.xyzw;
  r0.x+=stereo.x*(r0.w-stereo.y);
  r1.xyz = float3(0.5,-0.5,0.5) * r0.xyw;
  o5.zw = r0.zw;
  o5.xy = r1.xy + r1.zz;
  r0.xyz = v2.yzx * v1.zxy;
  r0.xyz = v1.yzx * v2.zxy + -r0.xyz;
  r1.y = dot(r0.xyz, -cb1[12].xyz);
  r1.x = dot(v2.xyz, -cb1[12].xyz);
  r1.z = dot(v1.xyz, -cb1[12].xyz);
  r0.w = dot(r1.xyz, r1.xyz);
  r0.w = rsqrt(r0.w);
  o3.xyz = r1.xyz * r0.www;
  o3.w = 0;
  r1.xyz = cb6[50].xyz + -cb1[12].xyz;
  r0.y = dot(r0.xyz, r1.xyz);
  r0.x = dot(v2.xyz, r1.xyz);
  r0.z = dot(v1.xyz, r1.xyz);
  r0.w = dot(r0.xyz, r0.xyz);
  r0.w = rsqrt(r0.w);
  o4.xyz = r0.xyz * r0.www;
  o4.w = 0;
  return;
}

/*~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//   using 3Dmigoto v1.3.16 on Sat Jan 30 11:23:13 2021
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyzw
// NORMAL                   0   xyz         1     NONE   float   xyz
// TANGENT                  0   xyz         2     NONE   float   xyz
// COLOR                    0   xyzw        3     NONE   float   xyzw
// TEXCOORD                 0   xy          4     NONE   float   xy
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// COLOR                    0   xyzw        0     NONE   float   xyzw
// TEXCOORD                 0   xy          1     NONE   float   xy
// SV_POSITION              0   xyzw        2      POS   float   xyzw
// TEXCOORD                 1   xyzw        3     NONE   float   xyzw
// TEXCOORD                 2   xyzw        4     NONE   float   xyzw
// TEXCOORD                 3   xyzw        5     NONE   float   xyzw
//
vs_5_0
dcl_globalFlags refactoringAllowed
dcl_constantbuffer cb1[13], immediateIndexed
dcl_constantbuffer cb4[24], immediateIndexed
dcl_constantbuffer cb6[51], immediateIndexed
dcl_input v0.xyzw
dcl_input v1.xyz
dcl_input v2.xyz
dcl_input v3.xyzw
dcl_input v4.xy
dcl_output o0.xyzw
dcl_output o1.xy
dcl_output_siv o2.xyzw, position
dcl_output o3.xyzw
dcl_output o4.xyzw
dcl_output o5.xyzw
dcl_temps 2
mov o0.xyzw, v3.xyzw
mov o1.xy, v4.xyxx
dp4 r0.x, cb4[20].xyzw, v0.xyzw
dp4 r0.y, cb4[21].xyzw, v0.xyzw
dp4 r0.z, cb4[22].xyzw, v0.xyzw
dp4 r0.w, cb4[23].xyzw, v0.xyzw
mov o2.xyzw, r0.xyzw
mul r1.xyz, r0.xywx, l(0.500000, -0.500000, 0.500000, 0.000000)
mov o5.zw, r0.zzzw
add o5.xy, r1.zzzz, r1.xyxx
mul r0.xyz, v1.zxyz, v2.yzxy
mad r0.xyz, v1.yzxy, v2.zxyz, -r0.xyzx
dp3 r1.y, r0.xyzx, -cb1[12].xyzx
dp3 r1.x, v2.xyzx, -cb1[12].xyzx
dp3 r1.z, v1.xyzx, -cb1[12].xyzx
dp3 r0.w, r1.xyzx, r1.xyzx
rsq r0.w, r0.w
mul o3.xyz, r0.wwww, r1.xyzx
mov o3.w, l(0)
add r1.xyz, -cb1[12].xyzx, cb6[50].xyzx
dp3 r0.y, r0.xyzx, r1.xyzx
dp3 r0.x, v2.xyzx, r1.xyzx
dp3 r0.z, v1.xyzx, r1.xyzx
dp3 r0.w, r0.xyzx, r0.xyzx
rsq r0.w, r0.w
mul o4.xyz, r0.wwww, r0.xyzx
mov o4.w, l(0)
ret
// Approximately 0 instruction slots used

//~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~*/
