//First person distortion PS.
// ---- Created with 3Dmigoto v1.3.16 on Sun Jan 31 17:26:20 2021
Texture2D<float4> t2 : register(t2);

Texture2D<float4> t1 : register(t1);

Texture2D<float4> t0 : register(t0);

SamplerState s2_s : register(s2);

SamplerState s1_s : register(s1);

SamplerState s0_s : register(s0);

cbuffer cb11 : register(b11)
{
  float4 cb11[1];
}

cbuffer cb5 : register(b5)
{
  float4 cb5[2];
}




// 3Dmigoto declarations
#define cmp -
Texture1D<float4> IniParams : register(t120);
Texture2D<float4> StereoParams : register(t125);


void main(
  float4 v0 : TEXCOORD0,
  float2 v1 : TEXCOORD1,
  out float4 o0 : SV_Target0)
{
  float4 r0;
  uint4 bitmask, uiDest;
  float4 fDest;
  
  float4 stereo = StereoParams.Load(0);
  v1.x-=stereo.x*0.5;
  
  r0.x = t1.Sample(s1_s, v0.zw).z;
  r0.x = cb5[0].x + -r0.x;
  r0.x = saturate(cb5[0].y * r0.x);
  r0.x = cb5[0].z * r0.x;
  r0.y = t2.Sample(s2_s, v1.xy).x;
  r0.y = cb5[1].x * r0.y;
  r0.x = r0.x * r0.y;
  r0.y = asuint(cb11[0].z);
  r0.y = -r0.y * 0.00392156886 + r0.x;
  o0.w = r0.x;
  r0.x = cmp(r0.y < 0);
  r0.y = cmp(0 < asuint(cb11[0].z));
  r0.x = r0.y ? r0.x : 0;
  if (r0.x != 0) discard;
  r0.xyz = t0.Sample(s0_s, v0.xy).xyz;
  o0.xyz = cb5[0].www * r0.xyz;
  return;
}

/*~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//   using 3Dmigoto v1.3.16 on Sun Jan 31 17:26:20 2021
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// TEXCOORD                 0   xyzw        0     NONE   float   xyzw
// TEXCOORD                 1   xy          1     NONE   float   xy
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
ps_5_0
dcl_globalFlags refactoringAllowed
dcl_constantbuffer cb5[2], immediateIndexed
dcl_constantbuffer cb11[1], immediateIndexed
dcl_sampler s0, mode_default
dcl_sampler s1, mode_default
dcl_sampler s2, mode_default
dcl_resource_texture2d (float,float,float,float) t0
dcl_resource_texture2d (float,float,float,float) t1
dcl_resource_texture2d (float,float,float,float) t2
dcl_input_ps linear v0.xyzw
dcl_input_ps linear v1.xy
dcl_output o0.xyzw
dcl_temps 1
sample_indexable(texture2d)(float,float,float,float) r0.x, v0.zwzz, t1.zxyw, s1
add r0.x, -r0.x, cb5[0].x
mul_sat r0.x, r0.x, cb5[0].y
mul r0.x, r0.x, cb5[0].z
sample_indexable(texture2d)(float,float,float,float) r0.y, v1.xyxx, t2.yxzw, s2
mul r0.y, r0.y, cb5[1].x
mul r0.x, r0.y, r0.x
utof r0.y, cb11[0].z
mad r0.y, -r0.y, l(0.00392156886), r0.x
mov o0.w, r0.x
lt r0.x, r0.y, l(0.000000)
ult r0.y, l(0), cb11[0].z
and r0.x, r0.y, r0.x
discard_nz r0.x
sample_indexable(texture2d)(float,float,float,float) r0.xyz, v0.xyxx, t0.xyzw, s0
mul o0.xyz, r0.xyzx, cb5[0].wwww
ret
// Approximately 0 instruction slots used

//~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~*/
