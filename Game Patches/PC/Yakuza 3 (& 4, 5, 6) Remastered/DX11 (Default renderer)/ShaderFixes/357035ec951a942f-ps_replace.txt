//Boxcelios haloing.
// ---- Created with 3Dmigoto v1.3.16 on Thu Feb 04 23:59:52 2021
Texture2D<float4> t1 : register(t1);

Texture2D<float4> t0 : register(t0);

SamplerState s1_s : register(s1);

SamplerState s0_s : register(s0);

cbuffer cb5 : register(b5)
{
  float4 cb5[3];
}




// 3Dmigoto declarations
#define cmp -
Texture1D<float4> IniParams : register(t120);
Texture2D<float4> StereoParams : register(t125);


void main(
  float4 v0 : SV_POSITION0,
  float4 v1 : TEXCOORD0,
  float4 v2 : TEXCOORD1,
  float4 v3 : TEXCOORD2,
  float4 v4 : TEXCOORD3,
  float2 v5 : TEXCOORD4,
  out float4 o0 : SV_Target0)
{
  float4 r0,r1,r2,r3;
  uint4 bitmask, uiDest;
  float4 fDest;
  
  float4 stereo = StereoParams.Load(0);
  v3.x+=stereo.x*(v3.z-stereo.y)*0.5;
  
  r0.x = t1.Sample(s1_s, v5.xy).w;
  r0.y = v4.z + r0.x;
  r0.x = 1 + r0.x;
  r0.x = -v4.x * 0.5 + r0.x;
  r0.x = saturate(10 * r0.x);
  r0.z = cmp(r0.y < 0);
  o0.w = r0.y;
  if (r0.z != 0) discard;
  r0.yz = v3.xy / v3.zz;
  r1.xy = v1.xy * v1.zz;
  r0.yz = r1.xy * float2(2,-2) + r0.yz;
  r0.yzw = t0.Sample(s0_s, r0.yz).xyz;
  r1.x = dot(v2.xyz, v2.xyz);
  r1.x = rsqrt(r1.x);
  r1.xyz = v2.xyz * r1.xxx;
  r1.w = dot(r1.xyz, v1.xyz);
  r2.x = 1 + -abs(r1.w);
  r2.x = dot(r2.xx, r2.xx);
  r0.yzw = r2.xxx * r0.yzw;
  r2.x = v4.x * abs(r1.w);
  r1.w = -2 * r1.w;
  r1.xyw = v1.xyz * r1.www + r1.xyz;
  r1.z = abs(r1.z) * abs(r1.z);
  r1.z = r1.z * r1.z;
  r1.z = r1.z * r1.z;
  r1.z = v4.y * r1.z;
  r2.yzw = cb5[2].xyz * r1.zzz;
  r3.xyz = float3(0.375,0.25,0.125) * r2.xxx;
  r0.xyz = r0.yzw * r0.xxx + r3.xyz;
  r0.w = cmp(v4.y < 0.800000012);
  r2.xyz = r0.www ? float3(0,0,0) : r2.yzw;
  r0.xyz = r2.xyz + r0.xyz;
  r2.xyz = cb5[0].xyz + -v2.xyz;
  r0.w = dot(r2.xyz, r2.xyz);
  r0.w = sqrt(r0.w);
  r2.xyz = r2.xyz / r0.www;
  r0.w = 1 + r0.w;
  r0.w = 1 / r0.w;
  r1.x = saturate(dot(r2.xyz, r1.xyw));
  r1.y = r1.x * r1.x;
  r1.x = r1.x * r1.y;
  r1.xyz = cb5[1].xyz * r1.xxx;
  o0.xyz = r1.xyz * r0.www + r0.xyz;
  return;
}

/*~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//   using 3Dmigoto v1.3.16 on Thu Feb 04 23:59:52 2021
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float
// TEXCOORD                 0   xyz         1     NONE   float   xyz
// TEXCOORD                 1   xyz         2     NONE   float   xyz
// TEXCOORD                 2   xyz         3     NONE   float   xyz
// TEXCOORD                 3   xyzw        4     NONE   float   xyz
// TEXCOORD                 4   xy          5     NONE   float   xy
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
ps_5_0
dcl_globalFlags refactoringAllowed
dcl_constantbuffer cb5[3], immediateIndexed
dcl_sampler s0, mode_default
dcl_sampler s1, mode_default
dcl_resource_texture2d (float,float,float,float) t0
dcl_resource_texture2d (float,float,float,float) t1
dcl_input_ps linear v1.xyz
dcl_input_ps linear v2.xyz
dcl_input_ps linear v3.xyz
dcl_input_ps linear v4.xyz
dcl_input_ps linear v5.xy
dcl_output o0.xyzw
dcl_temps 4
sample_indexable(texture2d)(float,float,float,float) r0.x, v5.xyxx, t1.wxyz, s1
add r0.y, r0.x, v4.z
add r0.x, r0.x, l(1.000000)
mad r0.x, -v4.x, l(0.500000), r0.x
mul_sat r0.x, r0.x, l(10.000000)
lt r0.z, r0.y, l(0.000000)
mov o0.w, r0.y
discard_nz r0.z
div r0.yz, v3.xxyx, v3.zzzz
mul r1.xy, v1.zzzz, v1.xyxx
mad r0.yz, r1.xxyx, l(0.000000, 2.000000, -2.000000, 0.000000), r0.yyzy
sample_indexable(texture2d)(float,float,float,float) r0.yzw, r0.yzyy, t0.wxyz, s0
dp3 r1.x, v2.xyzx, v2.xyzx
rsq r1.x, r1.x
mul r1.xyz, r1.xxxx, v2.xyzx
dp3 r1.w, r1.xyzx, v1.xyzx
add r2.x, -|r1.w|, l(1.000000)
dp2 r2.x, r2.xxxx, r2.xxxx
mul r0.yzw, r0.yyzw, r2.xxxx
mul r2.x, |r1.w|, v4.x
mul r1.w, r1.w, l(-2.000000)
mad r1.xyw, v1.xyxz, r1.wwww, r1.xyxz
mul r1.z, |r1.z|, |r1.z|
mul r1.z, r1.z, r1.z
mul r1.z, r1.z, r1.z
mul r1.z, r1.z, v4.y
mul r2.yzw, r1.zzzz, cb5[2].xxyz
mul r3.xyz, r2.xxxx, l(0.375000, 0.250000, 0.125000, 0.000000)
mad r0.xyz, r0.yzwy, r0.xxxx, r3.xyzx
lt r0.w, v4.y, l(0.800000)
movc r2.xyz, r0.wwww, l(0,0,0,0), r2.yzwy
add r0.xyz, r0.xyzx, r2.xyzx
add r2.xyz, -v2.xyzx, cb5[0].xyzx
dp3 r0.w, r2.xyzx, r2.xyzx
sqrt r0.w, r0.w
div r2.xyz, r2.xyzx, r0.wwww
add r0.w, r0.w, l(1.000000)
div r0.w, l(1.000000, 1.000000, 1.000000, 1.000000), r0.w
dp3_sat r1.x, r2.xyzx, r1.xywx
mul r1.y, r1.x, r1.x
mul r1.x, r1.y, r1.x
mul r1.xyz, r1.xxxx, cb5[1].xyzx
mad o0.xyz, r1.xyzx, r0.wwww, r0.xyzx
ret
// Approximately 0 instruction slots used

//~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~*/
